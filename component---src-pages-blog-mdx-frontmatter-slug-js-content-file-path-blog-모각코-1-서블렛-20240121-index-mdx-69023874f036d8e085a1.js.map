{"version":3,"file":"component---src-pages-blog-mdx-frontmatter-slug-js-content-file-path-blog-모각코-1-서블렛-20240121-index-mdx-69023874f036d8e085a1.js","mappings":"sNAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,IACHC,IAAK,MACLC,IAAK,MACLC,KAAM,SACLC,EAAAA,EAAAA,MAAsBR,EAAMS,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBT,EAAYG,EAAG,KAAM,uVAAwV,KAAMM,EAAAA,cAAoBT,EAAYG,EAAG,KAAM,kGAAmG,KAAMM,EAAAA,cAAoBT,EAAYG,EAAG,KAAMM,EAAAA,cAAoBT,EAAYI,IAAK,CACtpBM,IAAK,oBACLC,IAAK,UACH,2BAA4B,KAAMF,EAAAA,cAAoBT,EAAYG,EAAG,KAAMM,EAAAA,cAAoBT,EAAYI,IAAK,CAClHM,IAAK,oBACLC,IAAK,UACH,4GAA6G,KAAMF,EAAAA,cAAoBT,EAAYG,EAAG,KAAM,mBAAoB,KAAMM,EAAAA,cAAoBT,EAAYK,IAAK,KAAMI,EAAAA,cAAoBT,EAAYM,KAAM,CACzQM,UAAW,eACV,0FAA2F,KAAMH,EAAAA,cAAoBT,EAAYG,EAAG,KAAM,6GAA8GM,EAAAA,cAAoBT,EAAYI,IAAK,CAC9RM,IAAK,oBACLC,IAAK,WACF,KAAMF,EAAAA,cAAoBT,EAAYG,EAAG,KAAM,+pBAAgqB,KAAMM,EAAAA,cAAoBT,EAAYK,IAAK,KAAMI,EAAAA,cAAoBT,EAAYM,KAAM,CACzyBM,UAAW,eACV,qWAAwW,KAAMH,EAAAA,cAAoBT,EAAYI,IAAK,CACpZM,IAAK,oBACLC,IAAK,UACH,KAAMF,EAAAA,cAAoBT,EAAYG,EAAG,KAAM,eACrD,CAKA,MAJA,SAAoBJ,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOc,QAASC,GAAab,OAAOC,OAAO,CAAC,GAAGK,EAAAA,EAAAA,MAAsBR,EAAMS,YAC3E,OAAOM,EAAYL,EAAAA,cAAoBK,EAAWf,EAAOU,EAAAA,cAAoBX,EAAmBC,IAAUD,EAAkBC,EAC9H,E,kDCtBA,MAAMgB,EAAa,CACjBC,MAAK,IACLC,aAAYA,EAAAA,GAERC,EAAWC,IAAsB,IAArB,KAACC,EAAI,SAAEC,GAAS,EAChC,OAAOZ,EAAAA,cAAoBa,EAAAA,EAAQ,CACjCC,UAAWH,EAAKI,IAAIC,YAAYC,OAC/BjB,EAAAA,cAAoBkB,EAAAA,GAAa,CAClCnB,WAAYO,GACXM,EAAUZ,EAAAA,cAAoBmB,EAAAA,IAAW,EAYjCC,EAAOC,IAAA,IAAC,KAACV,GAAK,SAAKX,EAAAA,cAAoBsB,EAAAA,EAAK,CACvDL,MAAON,EAAKI,IAAIC,YAAYC,OAC5B,EAEa,SAASM,EAAiBjC,GACvC,OAAOU,EAAAA,cAAoBS,EAAUnB,EAAOU,EAAAA,cAAoBwB,EAAqBlC,GACvF,C,+CCpC8B,IAExBmC,EAAU,SAAAC,GACd,SAAAD,EAAYnC,GAAQ,IAADqC,EAIiB,OAHlCA,EAAAD,EAAAE,KAAA,KAAMtC,IAAM,MAEPuC,WAAa7B,EAAAA,YAClB2B,EAAKG,MAAQ,CAAEC,OAAQ,WAAWJ,CACpC,EANcK,EAAAA,EAAAA,GAAAP,EAAAC,GAMb,IAAAO,EAAAR,EAAAS,UAyBA,OAzBAD,EAEDE,kBAAA,WACE,MAAMC,EAAWC,SAASC,cAAc,UACxCF,EAASG,OAAS,IAAMC,KAAKC,SAAS,CAAEV,OAAQ,YAChDK,EAASM,QAAU,IAAMF,KAAKC,SAAS,CAAEV,OAAQ,WACjDK,EAASO,OAAQ,EACjBP,EAASnC,IAAM,gCACfmC,EAASQ,aAAa,OAAQ,+BAC9BR,EAASQ,aAAa,aAAc,SACpCR,EAASQ,aAAa,QAAS,gBAC/BR,EAASQ,aAAa,cAAe,aACrCJ,KAAKX,WAAWgB,QAAQC,YAAYV,EACtC,EAACH,EAEDc,OAAA,WACE,MAAM,OAAEhB,GAAWS,KAAKV,MAExB,OACE9B,EAAAA,cAAA,OAAKG,UAAU,oBACD,WAAX4B,GAAuB/B,EAAAA,cAAA,WAAK,4BACjB,YAAX+B,GAAwB/B,EAAAA,cAAA,WAAK,qBAC9BA,EAAAA,cAAA,OAAKgD,IAAKR,KAAKX,aAGrB,EAACJ,CAAA,CA/Ba,CAASzB,EAAAA,WAkCzB,K,+CCzBA,IANqBU,IAAA,IAAC,IAAEuC,EAAG,SAAErC,GAAUF,EAAA,OACnCV,EAAAA,cAAA,KAAGkD,KAAMD,EAAK9C,UAAWgD,EAAAA,IACpBvC,EACD,C,mECyDR,IArDeF,IAA8B,IAA7B,UAAEI,EAAS,SAAEF,GAAUF,EACnC,MAAMC,GAAOyC,EAAAA,EAAAA,IAAe,cAgC5B,OACIpD,EAAAA,cAAA,OAAKG,UAAWkD,EAAAA,IACZrD,EAAAA,cAAA,UAAQG,UAAWmD,EAAAA,IACftD,EAAAA,cAACuD,EAAAA,GAAI,CAACC,GAAG,IAAIrD,UAAWgD,EAAAA,IACpBnD,EAAAA,cAAA,QAAMG,UAAWsD,EAAAA,IAAY9C,EAAK+C,KAAKC,aAAa1C,QAExDjB,EAAAA,cAAA,WACIA,EAAAA,cAAA,MAAIG,UAAWyD,EAAAA,IA7BdC,MAQb,IAAIC,EAAO,GAWX,MAlBqB,CACjB,CAAC,IAAK,QACN,CAAC,SAAU,SACX,CAAC,8BAA+B,UAChC,CAAC,aAAc,aACf,CAAC,4EAA6E,gBAGrEC,KAAKC,IACdF,EAAI,GAAAG,QAAAC,EAAAA,EAAAA,GACGJ,GAAI,CACP9D,EAAAA,cAAA,MAAIG,UAAWgE,EAAAA,IACXnE,EAAAA,cAACuD,EAAAA,GAAI,CAACC,GAAIQ,EAAQ,GAAI7D,UAAWgD,EAAAA,IAC5Ba,EAAQ,MAGpB,IAEEF,CAAI,EAWMD,MAIb7D,EAAAA,cAAA,YACIA,EAAAA,cAAA,MAAIG,UAAWiE,EAAAA,IAActD,GAC5BF,GAEH,C,+CC3Cd,IAfYF,IAAgB,IAAf,MAAEO,GAAOP,EAClB,MAAMC,GAAOyC,EAAAA,EAAAA,IAAe,cAS5B,OACIpD,EAAAA,cAAA,aAAQiB,EAAM,MAAIN,EAAK+C,KAAKC,aAAa1C,MAAc,C,qECI/D,MAbcP,IAAA,IAAC,YAAE2D,EAAW,WAAEC,KAAehF,GAAOoB,EAAA,OAClDV,EAAAA,cAAA,OAAKG,UCLmB,sCDMtBH,EAAAA,cAAA,UACEC,IAAKoE,EACLpD,MAAOqD,EACPC,MAAM,0EACNC,YAAY,IACZC,sBAAsB,OACtBC,mBAAmB,OACnBC,iBAAe,IAEb,C,gOEfD,IAAIC,EAAe,qCACfvB,EAAY,kCACZF,EAAW,kCACXgB,EAAc,sCACdP,EAAW,kCACXQ,EAAc,qCACdd,EAAa,oCACbG,EAAY,kC,8FCwBhB,MAAMoB,EAAa,gBAAoB,CAAC,GAiCxC,SAASC,EAAiB/E,GAC/B,MAAMgF,EAAoB,aAAiBF,GAE3C,OAAO,WAAc,IAEO,mBAAf9E,EACFA,EAAWgF,GAGb,IAAIA,KAAsBhF,IAChC,CAACgF,EAAmBhF,GACzB,CAGA,MAAMiF,EAAc,CAAC,EAQd,SAAS9D,GAAY,WAACnB,EAAU,SAAEa,EAAQ,qBAAEqE,IACjD,IAAIC,EAAgBJ,EAAiB/E,GAMrC,OAJIkF,IACFC,EAAgBnF,GAAciF,GAGzB,gBACLH,EAAWM,SACX,CAACC,MAAOF,GACRtE,EAEJ,C","sources":["webpack://minjae-cho-blog/./blog/모각코1서블렛20240121/index.mdx","webpack://minjae-cho-blog/./src/pages/blog/{mdx.frontmatter__slug}.js","webpack://minjae-cho-blog/./src/components/comments.js","webpack://minjae-cho-blog/./src/components/externalLink.js","webpack://minjae-cho-blog/./src/components/layout.js","webpack://minjae-cho-blog/./src/components/seo.js","webpack://minjae-cho-blog/./src/components/video.js","webpack://minjae-cho-blog/./src/components/video.module.css","webpack://minjae-cho-blog/./src/components/layout.module.css","webpack://minjae-cho-blog/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    img: \"img\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"최근 참여하고 있는 프로젝트에서 React로 방 정보를 불러와서 뛰어주는 메인 페이지를 만들어야 하는 일이 있다.\\r\\n백엔드 만들어주시는 분이 api 방식으로 간단하게 방 정보들 가져올 수 있도록 해주셔서 그걸 적극 활용하였다.\\r\\n생각나는대로 api가 가져오는 정보를 기존 방 정보랑 결합해주도록 하는 더보기 버튼을 만드니, 계속해서 방 리스트를 가져올 수가 있었다.\\r\\n그리고 현재 띄어주는 것과 별개로 미리 다음 방 정보를 가져오는 것이 좋겠다고 같이 모각코를 진행중인 분이 말해주었었는데, 확실히 그렇게하니 더 불러올 방이 있으면 버튼이 활성화되고 없으면 비활성화 되는 기능을 구현하기 쉬웠다.\"), \"\\n\", React.createElement(_components.p, null, \"일단 이런 식으로 생각나는 대로 기능을 구현했더니, 그대로 바로 동작했다.\\r\\n그래서 바로 commit 하고 GitHub로 push하였으나.. 여기서 문제가 발생했다.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.img, {\n    src: \"./screenshot1.png\",\n    alt: \"스크린샷1\"\n  }), \"\\r\\n그냥 이렇게 떠버리는 것이 아닌가?\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.img, {\n    src: \"./screenshot2.png\",\n    alt: \"스크린샷2\"\n  }), \"\\r\\n버튼을 한번 눌러주어야 내가 기대한 최초의 화면이 나와버린다\\r\\n최초 실행 시에도 방 정보를 받아와야 하는데, 버튼을 눌러야 방 정보가 나오는 불친절한 사이트가 되어버린 것이다!\"), \"\\n\", React.createElement(_components.p, null, \"문제의 코드는 바로 이랬다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"  useEffect(() => {\\r\\n    fetchRooms(listRoomAmount, listPageAmount);\\r\\n  }, []);\\n\")), \"\\n\", React.createElement(_components.p, null, \"fetch해서 받아온 데이터가 채워져있을 변수를 console.log로 찍어봤더니, 아무것도 없었다.\\r\\n분명 최초 실행 시에도 방 정보를 받아와야 하는데, 받아오지 못하는 것이다.\\r\\n\", React.createElement(_components.img, {\n    src: \"./screenshot3.png\",\n    alt: \"스크린샷3\"\n  })), \"\\n\", React.createElement(_components.p, null, \"그래서 일단 머리를 스친 것은, useEffect가 제때 정보를 못 받아 온 것을 그냥 무시해버리고 있다는 느낌이었다.\\r\\n과거 react-native 웹뷰 관련 프로젝트를 할 때, gps 정보를 가져온 후에 웹페이지에 있는 js코드를 실행해야 했는데, 이 개념을 잘 몰라서 많이 헤맨적이 있었다.\\r\\n또한 저번 학기 운영체제 시간에 언급했던 프로젝트 때문에 관심을 가지게 된 동기, 비동기와 관련된 문제인 것 같아 어떻게 검색해서 정보를 알아볼 지 감이 잡혔다.\\r\\n동기화는 아예 작업을 순차적으로 해버리기 때문에 블록킹 방식과 같다 볼 수 있고, 논블록킹 방식은 작업이 끝날 때까지 기다리지 않는다고 들었었다.\\r\\n그러면 지금 useEffect는 논블로킹으로 작동 하고있는 것인가? 그래서 바로 구글에 리액트 useEffect 동기화라는 키워드로 검색해보았다.\\r\\n근데 검색해보니 async, 비동기를 사용하라고 한다.\\r\\n생각해보면 지금 방 정보를 얻어오는 api에다가 fetch 함수로 데이터를 가져오고 있는데, 당연히 동기나 비동기로 가져와야 했다.\\r\\n근데 동기화를 하기엔 데이터 받아올 때까지 사용자의 웹페이지가 멈춰있을 수는 없지 않은가?\\r\\n그래서 비동기로 동작하는 것이 당연한 것이 아닌가 나름대로 생각하며 바로 useEffect에서 async를 사용해버렸다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"  useEffect(() => {\\r\\n    async function fetchData() {\\r\\n      const res = await fetch(process.env.REACT_APP_BACKEND_URL + \\\"/post\\\" + `?maxPost=${listRoomAmount}&page=${listPageAmount}`);\\r\\n      const data = await res.json();\\r\\n      setPreRoomsData(data);\\r\\n      setRoomsData([...roomsData, ...data]);\\r\\n    }\\r\\n    fetchData();\\r\\n  }, []);\\n\")), \"\\n\", React.createElement(_components.img, {\n    src: \"./screenshot4.png\",\n    alt: \"스크린샷4\"\n  }), \"\\n\", React.createElement(_components.p, null, \"그러니 잘 동작한다.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/ubuntu/github/ussr1285.github.io/blog/모각코1서블렛20240121/index.mdx\";\nimport React from 'react';\nimport {graphql} from 'gatsby';\nimport {MDXProvider} from \"@mdx-js/react\";\nimport Layout from '../../components/layout';\nimport Seo from '../../components/seo';\nimport Video from '../../components/video';\nimport ExternalLink from '../../components/externalLink';\nimport Utteranc from '../../components/comments';\nconst shortcodes = {\n  Video,\n  ExternalLink\n};\nconst BlogPost = ({data, children}) => {\n  return React.createElement(Layout, {\n    pageTitle: data.mdx.frontmatter.title\n  }, React.createElement(MDXProvider, {\n    components: shortcodes\n  }, children, React.createElement(Utteranc)));\n};\nexport const query = graphql`\nquery($id: String) {\n    mdx(id: {eq: $id}) {\n      frontmatter {\n        title\n        date(formatString: \"YYYY.MM.DD\")\n      }\n    }\n  }\n`;\nexport const Head = ({data}) => React.createElement(Seo, {\n  title: data.mdx.frontmatter.title\n});\nBlogPost\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPost, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","import * as React from 'react'\n\nclass Utterances extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.commentsEl = React.createRef()\n    this.state = { status: 'pending' }\n  }\n\n  componentDidMount() {\n    const scriptEl = document.createElement('script')\n    scriptEl.onload = () => this.setState({ status: 'success' })\n    scriptEl.onerror = () => this.setState({ status: 'failed' })\n    scriptEl.async = true\n    scriptEl.src = 'https://utteranc.es/client.js'\n    scriptEl.setAttribute('repo', 'ussr1285/ussr1285.github.io')\n    scriptEl.setAttribute('issue-term', 'title')\n    scriptEl.setAttribute('theme', 'github-light')\n    scriptEl.setAttribute('crossorigin', 'anonymous')\n    this.commentsEl.current.appendChild(scriptEl)\n  }\n\n  render() {\n    const { status } = this.state\n\n    return (\n      <div className=\"comments-wrapper\">\n        {status === 'failed' && <div>Error. Please try again.</div>}\n        {status === 'pending' && <div>Loading script...</div>}\n        <div ref={this.commentsEl} />\n      </div>\n    )\n  }\n}\n\nexport default Utterances","import React from \"react\"\nimport { \n    linkText\n} from './layout.module.css'\n\nconst ExternalLink = ({ URL, children }) => (\n    <a href={URL} className={linkText}>\n        {children}\n    </a>\n    \n)\nexport default ExternalLink","import React from 'react'\nimport { Link, useStaticQuery, graphql } from 'gatsby'\nimport {\n    container,\n    navLinks,\n    navLinkItem,\n    linkText,\n    siteHeader,\n    siteTitle,\n    pageHeading\n} from './layout.module.css'\n\nconst Layout = ({ pageTitle, children }) => {\n    const data = useStaticQuery(graphql`\n        query {\n            site {\n                siteMetadata {\n                    title\n                }\n            }\n        }\n    `)\n\n    const makeNavs = () => {\n        const navLinkLists = [\n            [\"/\", \"Main\"],\n            [\"/about\", \"About\"],\n            [\"https://github.com/ussr1285\", \"Github\"],\n            [\"/guestbook\", \"Guestbook\"],\n            [\"https://minjaegoogling.notion.site/fb5067a26b514e6580519523e319a5f6?pvs=4\", \"My Googling\"],\n        ]\n        let navs = []\n        navLinkLists.map((navInfo) => {\n            navs = [\n                ...navs,\n                <li className={navLinkItem}>\n                    <Link to={navInfo[0]} className={linkText}>\n                        {navInfo[1]}\n                    </Link>\n                </li>\n            ]\n        })\n        return navs\n    }\n\n    return (\n        <div className={container}>\n            <header className={siteHeader}>\n                <Link to=\"/\" className={linkText}>\n                    <span className={siteTitle}>{data.site.siteMetadata.title}</span>\n                </Link>\n                <nav>\n                    <ul className={navLinks}>\n                        {makeNavs()}\n                    </ul>\n                </nav>\n            </header>\n            <main>\n                <h1 className={pageHeading}>{pageTitle}</h1>\n                {children}\n            </main>\n        </div>\n    )\n}\n\nexport default Layout","import React from 'react'\nimport { graphql, useStaticQuery } from 'gatsby'\n\nconst Seo = ({ title }) => {\n    const data = useStaticQuery(graphql`\n    query {\n        site {\n            siteMetadata {\n                title\n            }\n        }\n    }\n    `)\n    return(\n        <title>{title} | {data.site.siteMetadata.title}</title>\n    )\n}\n\nexport default Seo","import React from \"react\"\nimport { \n  videoWrapper\n} from './video.module.css'\n\nconst Video = ({ videoSrcURL, videoTitle, ...props }) => (\n  <div className={videoWrapper}>\n    <iframe\n      src={videoSrcURL}\n      title={videoTitle}\n      allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n      frameBorder=\"0\"\n      webkitallowfullscreen=\"true\"\n      mozallowfullscreen=\"true\"\n      allowFullScreen\n    />\n  </div>\n)\nexport default Video","// extracted by mini-css-extract-plugin\nexport var videoWrapper = \"video-module--video-wrapper--8f25c\";","// extracted by mini-css-extract-plugin\nexport var articleStyle = \"layout-module--articleStyle--05fbf\";\nexport var container = \"layout-module--container--78b04\";\nexport var linkText = \"layout-module--link-text--246e7\";\nexport var navLinkItem = \"layout-module--nav-link-item--a5f0a\";\nexport var navLinks = \"layout-module--nav-links--1113b\";\nexport var pageHeading = \"layout-module--page-heading--83cb2\";\nexport var siteHeader = \"layout-module--site-header--d0ab8\";\nexport var siteTitle = \"layout-module--site-title--e4dea\";","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode} [children]\n *   Children.\n *\n * @callback MergeComponents\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components|MergeComponents} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  let allComponents = useMDXComponents(components)\n\n  if (disableParentContext) {\n    allComponents = components || emptyObject\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","img","pre","code","_provideComponents","components","React","src","alt","className","wrapper","MDXLayout","shortcodes","Video","ExternalLink","BlogPost","_ref","data","children","Layout","pageTitle","mdx","frontmatter","title","MDXProvider","Utteranc","Head","_ref2","Seo","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","Utterances","_React$Component","_this","call","commentsEl","state","status","_inheritsLoose","_proto","prototype","componentDidMount","scriptEl","document","createElement","onload","this","setState","onerror","async","setAttribute","current","appendChild","render","ref","URL","href","linkText","useStaticQuery","container","siteHeader","Link","to","siteTitle","site","siteMetadata","navLinks","makeNavs","navs","map","navInfo","concat","_toConsumableArray","navLinkItem","pageHeading","videoSrcURL","videoTitle","allow","frameBorder","webkitallowfullscreen","mozallowfullscreen","allowFullScreen","articleStyle","MDXContext","useMDXComponents","contextComponents","emptyObject","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}