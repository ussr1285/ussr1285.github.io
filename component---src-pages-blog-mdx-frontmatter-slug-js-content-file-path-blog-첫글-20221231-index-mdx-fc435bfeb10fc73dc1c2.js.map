{"version":3,"file":"component---src-pages-blog-mdx-frontmatter-slug-js-content-file-path-blog-첫글-20221231-index-mdx-fc435bfeb10fc73dc1c2.js","mappings":"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","sources":["webpack://minjae-cho-blog/./blog/첫글20221231/index.mdx","webpack://minjae-cho-blog/./src/pages/blog/{mdx.frontmatter__slug}.js","webpack://minjae-cho-blog/./src/components/comments.js","webpack://minjae-cho-blog/./src/components/externalLink.js","webpack://minjae-cho-blog/./src/components/layout.js","webpack://minjae-cho-blog/./src/components/seo.js","webpack://minjae-cho-blog/./src/components/video.js","webpack://minjae-cho-blog/./src/components/video.module.css","webpack://minjae-cho-blog/./src/components/layout.module.css","webpack://minjae-cho-blog/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"드디어 나의 처음부터 만든 블로그가 완성되었다. (2022년 여름 기준)\"), \"\\n\", React.createElement(_components.p, null, \"블로그 플랫폼(네이버 블로그, 티스토리 등)을 이용하지 않고, 내 블로그를 직접 만들고자 하는 욕망은 사실 2017년 고등학교 1학년때부터 있었다.\"), \"\\n\", React.createElement(_components.p, null, \"그러나 그 당시 사용하려 했던 jekyll과 ruby라는 낯선 친구들에게 어려움을 느꼈었기에 계속 좌절되었었다.\"), \"\\n\", React.createElement(_components.p, null, \"나는 아예 제로부터 HTML과 CSS를 만지작 거리며 github.io 도메인을 가진 블로그를 만들고 싶었는데, 그렇게 하기에는 좀 더 jekyll에 대해 이해할 필요가 있었다. (템플렛등은 그냥 클론하면 되어서 매우 쉬웠으나, 이것을 입맛대로 수정하는 것에 대해서는 아쉽게도 당시에 이해를 못함)\"), \"\\n\", React.createElement(_components.p, null, \"일단 정적페이지를 활용한 깃허브 블로그의 근본적인 핵심은 .md같은 마크다운 파일들을 게시글로 (html 문서로) 변환하여 보여준다는 것이었다.\"), \"\\n\", React.createElement(_components.p, null, \"그 마크다운 변환 기능을 탑재한, 그리고 github-pages에서 처리해주는 대표적인 것이 jekyll과 gatsby 였고, 나는 이 블로그 개설에 gatsby를 사용하게 되었다.\"), \"\\n\", React.createElement(_components.p, null, \"기존에 Expo(React Native 쉬운 버젼) 관련해서 깨작깨작 무언가를 만들어본 적이 있었기에, npm과 react gatsby는 ruby와 jekyll에 비해서 그나마 내게 친숙할 것이라 생각했고, 그리고 \", React.createElement(_components.a, {\n    href: \"https://www.gatsbyjs.com/docs/\"\n  }, \"공식 문서\"), \"가 상당히 친절하여 마음에 들었다.\"), \"\\n\", React.createElement(_components.p, null, \"최근(2022년 봄)에 취미를 들인 \", React.createElement(_components.a, {\n    href: \"https://youtube.com/playlist?list=PLmrVWPFHf_oG1Im06PQ7hAGe8cLjRr_b5\"\n  }, \"만화 캐릭터 그리기와 관련된 유튜브 강의\"), \"를 보며 공책에 메모&그림을 따라 그렸는데, 이걸 보존할 겸 블로그에 올리면 되겠다는 생각으로 블로그 제작에 힘썼었다.\"), \"\\n\", React.createElement(_components.p, null, \"그렇게 5년 만에 꿈에 그리던 핸드메이드(gatsby의 힘을 빌린) 블로그가 완성되었다!\"), \"\\n\", React.createElement(_components.p, null, \"이제 외출 or 외박을 나가서 그림을 스캔하고 메모와 함께 게시물을 올리려하였으나…!\"), \"\\n\", React.createElement(_components.p, null, \"아쉽게도 근방의 프린터 카페 스캔 방식이 전부 문서형 스캐너(\", React.createElement(_components.a, {\n    href: \"https://namu.wiki/w/%EC%8A%A4%EC%BA%90%EB%84%88#toc\"\n  }, \"이런 느낌?\"), \")라서, 공책을 스캔하려면 종이를 뜯어야 했기 때문에 스캔을 못해왔다.\"), \"\\n\", React.createElement(_components.p, null, \"이것 때문에 약간 좌절한 나는, 게시글을 블로그 완성 이후로 하나도 포스팅하지 않았다..\"), \"\\n\", React.createElement(_components.p, null, \"허나 취미 뿐만 아니라 평소의 생각, 책에서 읽은 감명깊은 내용, 평소에 문제를 해결하게 된 기술적인 내용을 블로그에 기록하자는 목적도 있었기에, 그리고 게시글을 올리지 않으면, 웹 개발 공부 겸해서 하는 블로그 제작에 흥미가 생기지 않아 완성이 지연되기 때문에, 지금 다소 두서없는 글로 블로>그의 첫 게시글을 시작하고 있다.\"), \"\\n\", React.createElement(_components.p, null, \"이제 생활하는 중 노트에 적어놓았던 것과, 노션에 개인적으로 글을 쓴 것들을 정리해서? 블로그 게시물로 올리면 될 것 같다.\"), \"\\n\", React.createElement(_components.p, null, \"아무도 보지 않는 공개 일기?! 같은 느낌이지만, 블로그 글 게시가 작은 목표가 되어 삶의 원동력이 될 것이라 기대하고 있다.\"), \"\\n\", React.createElement(_components.p, null, \"아직 블로그에 보완해야할 점이 많기에, 앞으로 블로그에서 구현/활용하고 싶은 기능은 다음과 같다.\"), \"\\n\", React.createElement(_components.p, null, \"게시글 카테고리화 기능(네이버 블로그의 카테고리 스타일을 지향한다), 댓글 기능(firebase를 활용하거나, 아예 CRUD 기능 구현해볼 겸 아예 다른 사이트를 삽입하는 등 응용해볼까 생각 중이다. 이건 좀 더 알아봐야겠다), 1대1 채팅기능, 앞 두개의 기능을 위한 SSO(Single Sign-On) 로그인 연동, 포트\\r\\n폴리오용 페이지, 기술블로그와 취미&일상블로그의 분리, 구글애널리틱스 연동 등을 생각하고 있다.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"C:/Users/ipszo/Documents/GitHub/ussr1285.github.io/blog/첫글20221231/index.mdx\";\nimport React from 'react';\nimport {graphql} from 'gatsby';\nimport {MDXProvider} from \"@mdx-js/react\";\nimport Layout from '../../components/layout';\nimport Seo from '../../components/seo';\nimport Video from '../../components/video';\nimport ExternalLink from '../../components/externalLink';\nimport Utteranc from '../../components/comments';\nconst shortcodes = {\n  Video,\n  ExternalLink\n};\nconst BlogPost = ({data, children}) => {\n  return React.createElement(Layout, {\n    pageTitle: data.mdx.frontmatter.title\n  }, React.createElement(MDXProvider, {\n    components: shortcodes\n  }, children, React.createElement(Utteranc)));\n};\nexport const query = graphql`\nquery($id: String) {\n    mdx(id: {eq: $id}) {\n      frontmatter {\n        title\n        date(formatString: \"YYYY.MM.DD\")\n      }\n    }\n  }\n`;\nexport const Head = ({data}) => React.createElement(Seo, {\n  title: data.mdx.frontmatter.title\n});\nBlogPost\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPost, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","import * as React from 'react'\r\n\r\nclass Utterances extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.commentsEl = React.createRef()\r\n    this.state = { status: 'pending' }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const scriptEl = document.createElement('script')\r\n    scriptEl.onload = () => this.setState({ status: 'success' })\r\n    scriptEl.onerror = () => this.setState({ status: 'failed' })\r\n    scriptEl.async = true\r\n    scriptEl.src = 'https://utteranc.es/client.js'\r\n    scriptEl.setAttribute('repo', 'ussr1285/ussr1285.github.io')\r\n    scriptEl.setAttribute('issue-term', 'title')\r\n    scriptEl.setAttribute('theme', 'github-light')\r\n    scriptEl.setAttribute('crossorigin', 'anonymous')\r\n    this.commentsEl.current.appendChild(scriptEl)\r\n  }\r\n\r\n  render() {\r\n    const { status } = this.state\r\n\r\n    return (\r\n      <div className=\"comments-wrapper\">\r\n        {status === 'failed' && <div>Error. Please try again.</div>}\r\n        {status === 'pending' && <div>Loading script...</div>}\r\n        <div ref={this.commentsEl} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Utterances","import React from \"react\"\r\nimport { \r\n    linkText\r\n} from './layout.module.css'\r\n\r\nconst ExternalLink = ({ URL, children }) => (\r\n    <a href={URL} className={linkText}>\r\n        {children}\r\n    </a>\r\n    \r\n)\r\nexport default ExternalLink","import React from 'react'\r\nimport { Link, useStaticQuery, graphql } from 'gatsby'\r\nimport {\r\n    container,\r\n    navLinks,\r\n    navLinkItem,\r\n    linkText,\r\n    siteHeader,\r\n    siteTitle,\r\n    pageHeading\r\n} from './layout.module.css'\r\n\r\nconst Layout = ({ pageTitle, children }) => {\r\n    const data = useStaticQuery(graphql`\r\n        query {\r\n            site {\r\n                siteMetadata {\r\n                    title\r\n                }\r\n            }\r\n        }\r\n    `)\r\n\r\n    const makeNavs = () => {\r\n        const navLinkLists = [\r\n            [\"/\", \"Main\"],\r\n            [\"/about\", \"About\"],\r\n            [\"https://github.com/ussr1285\", \"Github\"],\r\n            [\"/guestbook\", \"Guestbook\"],\r\n            [\"https://minjaegoogling.notion.site/fb5067a26b514e6580519523e319a5f6?pvs=4\", \"My Googling\"],\r\n        ]\r\n        let navs = []\r\n        navLinkLists.map((navInfo) => {\r\n            navs = [\r\n                ...navs,\r\n                <li className={navLinkItem}>\r\n                    <Link to={navInfo[0]} className={linkText}>\r\n                        {navInfo[1]}\r\n                    </Link>\r\n                </li>\r\n            ]\r\n        })\r\n        return navs\r\n    }\r\n\r\n    return (\r\n        <div className={container}>\r\n            <header className={siteHeader}>\r\n                <Link to=\"/\" className={linkText}>\r\n                    <span className={siteTitle}>{data.site.siteMetadata.title}</span>\r\n                </Link>\r\n                <nav>\r\n                    <ul className={navLinks}>\r\n                        {makeNavs()}\r\n                    </ul>\r\n                </nav>\r\n            </header>\r\n            <main>\r\n                <h1 className={pageHeading}>{pageTitle}</h1>\r\n                {children}\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Layout","import React from 'react'\r\nimport { graphql, useStaticQuery } from 'gatsby'\r\n\r\nconst Seo = ({ title }) => {\r\n    const data = useStaticQuery(graphql`\r\n    query {\r\n        site {\r\n            siteMetadata {\r\n                title\r\n            }\r\n        }\r\n    }\r\n    `)\r\n    return(\r\n        <title>{title} | {data.site.siteMetadata.title}</title>\r\n    )\r\n}\r\n\r\nexport default Seo","import React from \"react\"\r\nimport { \r\n  videoWrapper\r\n} from './video.module.css'\r\n\r\nconst Video = ({ videoSrcURL, videoTitle, ...props }) => (\r\n  <div className={videoWrapper}>\r\n    <iframe\r\n      src={videoSrcURL}\r\n      title={videoTitle}\r\n      allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\r\n      frameBorder=\"0\"\r\n      webkitallowfullscreen=\"true\"\r\n      mozallowfullscreen=\"true\"\r\n      allowFullScreen\r\n    />\r\n  </div>\r\n)\r\nexport default Video","// extracted by mini-css-extract-plugin\nexport var videoWrapper = \"video-module--video-wrapper--8f25c\";","// extracted by mini-css-extract-plugin\nexport var articleStyle = \"layout-module--articleStyle--05fbf\";\nexport var container = \"layout-module--container--78b04\";\nexport var linkText = \"layout-module--link-text--246e7\";\nexport var navLinkItem = \"layout-module--nav-link-item--a5f0a\";\nexport var navLinks = \"layout-module--nav-links--1113b\";\nexport var pageHeading = \"layout-module--page-heading--83cb2\";\nexport var siteHeader = \"layout-module--site-header--d0ab8\";\nexport var siteTitle = \"layout-module--site-title--e4dea\";","/**\n * @typedef {import('mdx/types.js').MDXComponents} MDXComponents\n * @typedef {import('react').Component<{}, {}, unknown>} Component\n * @typedef {import('react').ReactNode} ReactNode\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\nimport React from 'react'\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = React.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {JSX.Element}\n *   Element.\n * @satisfies {Component}\n */\nexport function MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","a","_provideComponents","components","React","href","wrapper","MDXLayout","shortcodes","Video","ExternalLink","BlogPost","_ref","data","children","Layout","pageTitle","mdx","frontmatter","title","MDXProvider","Utteranc","Head","_ref2","Seo","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","Utterances","_React$Component","_this","call","commentsEl","state","status","_inheritsLoose","_proto","prototype","componentDidMount","scriptEl","document","createElement","onload","this","setState","onerror","async","src","setAttribute","current","appendChild","render","className","ref","URL","linkText","useStaticQuery","container","siteHeader","Link","to","siteTitle","site","siteMetadata","navLinks","makeNavs","navs","map","navInfo","concat","_toConsumableArray","navLinkItem","pageHeading","videoSrcURL","videoTitle","allow","frameBorder","webkitallowfullscreen","mozallowfullscreen","allowFullScreen","articleStyle","emptyComponents","MDXContext","useMDXComponents","contextComponents","properties","allComponents","disableParentContext","Provider","value"],"sourceRoot":""}