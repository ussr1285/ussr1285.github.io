{"version":3,"file":"component---src-pages-blog-mdx-frontmatter-slug-js-content-file-path-home-ubuntu-github-ussr-1285-github-io-blog-첫글-20221231-index-mdx-dd2730687808a70d5cbc.js","mappings":"sNAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,IACHC,EAAG,MACFC,EAAAA,EAAAA,MAAsBN,EAAMO,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,4CAA6C,KAAMI,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,sFAAuF,KAAMI,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,kEAAmE,KAAMI,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,0KAA2K,KAAMI,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,oFAAqF,KAAMI,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,yGAA0G,KAAMI,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,2HAA4HI,EAAAA,cAAoBP,EAAYI,EAAG,CAClkCI,KAAM,kCACL,SAAU,uBAAwB,KAAMD,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,uBAAwBI,EAAAA,cAAoBP,EAAYI,EAAG,CAC7II,KAAM,wEACL,0BAA2B,sEAAuE,KAAMD,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,qDAAsD,KAAMI,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,mDAAoD,KAAMI,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,qCAAsCI,EAAAA,cAAoBP,EAAYI,EAAG,CACnaI,KAAM,uDACL,UAAW,2CAA4C,KAAMD,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,qDAAsD,KAAMI,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,2LAA4L,KAAMI,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,yEAA0E,KAAMI,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,0EAA2E,KAAMI,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,0DAA2D,KAAMI,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,kPACxxB,CAKA,MAJA,SAAoBJ,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOU,QAASC,GAAaT,OAAOC,OAAO,CAAC,GAAGG,EAAAA,EAAAA,MAAsBN,EAAMO,YAC3E,OAAOI,EAAYH,EAAAA,cAAoBG,EAAWX,EAAOQ,EAAAA,cAAoBT,EAAmBC,IAAUD,EAAkBC,EAC9H,E,wCCXA,MAAMY,EAAa,CACjBC,MAAK,IACLC,aAAYA,EAAAA,GAERC,EAAWC,IAAsB,IAArB,KAACC,EAAI,SAAEC,GAAS,EAChC,OAAOV,EAAAA,cAAoBW,EAAAA,EAAQ,CACjCC,UAAWH,EAAKI,IAAIC,YAAYC,OAC/Bf,EAAAA,cAAoBgB,EAAAA,GAAa,CAClCjB,WAAYK,GACXM,GAAU,EAYFO,EAAOC,IAAA,IAAC,KAACT,GAAK,SAAKT,EAAAA,cAAoBmB,EAAAA,EAAK,CACvDJ,MAAON,EAAKI,IAAIC,YAAYC,OAC5B,EAEa,SAASK,EAAiB5B,GACvC,OAAOQ,EAAAA,cAAoBO,EAAUf,EAAOQ,EAAAA,cAAoBqB,EAAqB7B,GACvF,C,+CCxBA,IANqB,QAAC,IAAE8B,EAAG,SAAEZ,GAAU,SACnC,qBAAGT,KAAMqB,EAAKC,UAAWC,EAAAA,IACpBd,EACD,C,yDCiDR,IA7Ce,IAA8B,IAA7B,UAAEE,EAAS,SAAEF,GAAU,EACnC,MAAMD,GAAOgB,EAAAA,EAAAA,IAAe,cAU5B,OACI,uBAAKF,UAAWG,EAAAA,IACZ,0BAAQH,UAAWI,EAAAA,IACf,gBAAC,KAAI,CAACC,GAAG,IAAIL,UAAWC,EAAAA,IACpB,wBAAMD,UAAWM,EAAAA,IAAYpB,EAAKqB,KAAKC,aAAahB,QAExD,2BACI,sBAAIQ,UAAWS,EAAAA,IACX,sBAAIT,UAAWU,EAAAA,IACX,gBAAC,KAAI,CAACL,GAAG,IAAIL,UAAWC,EAAAA,IAAU,SAItC,sBAAID,UAAWU,EAAAA,IACX,gBAAC,KAAI,CAACL,GAAG,SAASL,UAAWC,EAAAA,IAAU,UAI3C,sBAAID,UAAWU,EAAAA,IACX,qBAAGhC,KAAK,8BAA8BsB,UAAWC,EAAAA,IAAU,cAO3E,4BACI,sBAAID,UAAWW,EAAAA,IAActB,GAC5BF,GAEH,C,+CCnCd,IAfY,IAAgB,IAAf,MAAEK,GAAO,EAClB,MAAMN,GAAOgB,EAAAA,EAAAA,IAAe,cAS5B,OACI,6BAAQV,EAAM,MAAIN,EAAKqB,KAAKC,aAAahB,MAAc,C,qECI/D,MAbc,QAAC,YAAEoB,EAAW,WAAEC,KAAe5C,GAAO,SAClD,uBAAK+B,UCLmB,sCDMtB,0BACEc,IAAKF,EACLpB,MAAOqB,EACPE,MAAM,0EACNC,YAAY,IACZC,sBAAsB,OACtBC,mBAAmB,OACnBC,iBAAe,IAEb,C,gOEfD,IAAIC,EAAe,qCACfjB,EAAY,kCACZF,EAAW,kCACXS,EAAc,sCACdD,EAAW,kCACXE,EAAc,qCACdP,EAAa,oCACbE,EAAY,kC,8FCwBhB,MAAMe,EAAa,gBAAoB,CAAC,GAiCxC,SAASC,EAAiB9C,GAC/B,MAAM+C,EAAoB,aAAiBF,GAE3C,OAAO,WAAc,IAEO,mBAAf7C,EACFA,EAAW+C,GAGb,IAAIA,KAAsB/C,IAChC,CAAC+C,EAAmB/C,GACzB,CAGA,MAAMgD,EAAc,CAAC,EAQd,SAAS/B,GAAY,WAACjB,EAAU,SAAEW,EAAQ,qBAAEsC,IACjD,IAAIC,EAAgBJ,EAAiB9C,GAMrC,OAJIiD,IACFC,EAAgBlD,GAAcgD,GAGzB,gBACLH,EAAWM,SACX,CAACC,MAAOF,GACRvC,EAEJ,C","sources":["webpack://minjae-cho-blog/./blog/첫글20221231/index.mdx","webpack://minjae-cho-blog/./src/pages/blog/{mdx.frontmatter__slug}.js","webpack://minjae-cho-blog/./src/components/externalLink.js","webpack://minjae-cho-blog/./src/components/layout.js","webpack://minjae-cho-blog/./src/components/seo.js","webpack://minjae-cho-blog/./src/components/video.js","webpack://minjae-cho-blog/./src/components/video.module.css","webpack://minjae-cho-blog/./src/components/layout.module.css","webpack://minjae-cho-blog/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"드디어 나의 처음부터 만든 블로그가 완성되었다. (2022년 여름 기준)\"), \"\\n\", React.createElement(_components.p, null, \"블로그 플랫폼(네이버 블로그, 티스토리 등)을 이용하지 않고, 내 블로그를 직접 만들고자 하는 욕망은 사실 2017년 고등학교 1학년때부터 있었다.\"), \"\\n\", React.createElement(_components.p, null, \"그러나 그 당시 사용하려 했던 jekyll과 ruby라는 낯선 친구들에게 어려움을 느꼈었기에 계속 좌절되었었다.\"), \"\\n\", React.createElement(_components.p, null, \"나는 아예 제로부터 HTML과 CSS를 만지작 거리며 github.io 도메인을 가진 블로그를 만들고 싶었는데, 그렇게 하기에는 좀 더 jekyll에 대해 이해할 필요가 있었다. (템플렛등은 그냥 클론하면 되어서 매우 쉬웠으나, 이것을 입맛대로 수정하는 것에 대해서는 아쉽게도 당시에 이해를 못함)\"), \"\\n\", React.createElement(_components.p, null, \"일단 정적페이지를 활용한 깃허브 블로그의 근본적인 핵심은 .md같은 마크다운 파일들을 게시글로 (html 문서로) 변환하여 보여준다는 것이었다.\"), \"\\n\", React.createElement(_components.p, null, \"그 마크다운 변환 기능을 탑재한, 그리고 github-pages에서 처리해주는 대표적인 것이 jekyll과 gatsby 였고, 나는 이 블로그 개설에 gatsby를 사용하게 되었다.\"), \"\\n\", React.createElement(_components.p, null, \"기존에 Expo(React Native 쉬운 버젼) 관련해서 깨작깨작 무언가를 만들어본 적이 있었기에, npm과 react gatsby는 ruby와 jekyll에 비해서 그나마 내게 친숙할 것이라 생각했고, 그리고 \", React.createElement(_components.a, {\n    href: \"https://www.gatsbyjs.com/docs/\"\n  }, \"공식 문서\"), \"가 상당히 친절하여 마음에 들었다.\"), \"\\n\", React.createElement(_components.p, null, \"최근(2022년 봄)에 취미를 들인 \", React.createElement(_components.a, {\n    href: \"https://youtube.com/playlist?list=PLmrVWPFHf_oG1Im06PQ7hAGe8cLjRr_b5\"\n  }, \"만화 캐릭터 그리기와 관련된 유튜브 강의\"), \"를 보며 공책에 메모&그림을 따라 그렸는데, 이걸 보존할 겸 블로그에 올리면 되겠다는 생각으로 블로그 제작에 힘썼었다.\"), \"\\n\", React.createElement(_components.p, null, \"그렇게 5년 만에 꿈에 그리던 핸드메이드(gatsby의 힘을 빌린) 블로그가 완성되었다!\"), \"\\n\", React.createElement(_components.p, null, \"이제 외출 or 외박을 나가서 그림을 스캔하고 메모와 함께 게시물을 올리려하였으나…!\"), \"\\n\", React.createElement(_components.p, null, \"아쉽게도 근방의 프린터 카페 스캔 방식이 전부 문서형 스캐너(\", React.createElement(_components.a, {\n    href: \"https://namu.wiki/w/%EC%8A%A4%EC%BA%90%EB%84%88#toc\"\n  }, \"이런 느낌?\"), \")라서, 공책을 스캔하려면 종이를 뜯어야 했기 때문에 스캔을 못해왔다.\"), \"\\n\", React.createElement(_components.p, null, \"이것 때문에 약간 좌절한 나는, 게시글을 블로그 완성 이후로 하나도 포스팅하지 않았다..\"), \"\\n\", React.createElement(_components.p, null, \"허나 취미 뿐만 아니라 평소의 생각, 책에서 읽은 감명깊은 내용, 평소에 문제를 해결하게 된 기술적인 내용을 블로그에 기록하자는 목적도 있었기에, 그리고 게시글을 올리지 않으면, 웹 개발 공부 겸해서 하는 블로그 제작에 흥미가 생기지 않아 완성이 지연되기 때문에, 지금 다소 두서없는 글로 블로>그의 첫 게시글을 시작하고 있다.\"), \"\\n\", React.createElement(_components.p, null, \"이제 생활하는 중 노트에 적어놓았던 것과, 노션에 개인적으로 글을 쓴 것들을 정리해서? 블로그 게시물로 올리면 될 것 같다.\"), \"\\n\", React.createElement(_components.p, null, \"아무도 보지 않는 공개 일기?! 같은 느낌이지만, 블로그 글 게시가 작은 목표가 되어 삶의 원동력이 될 것이라 기대하고 있다.\"), \"\\n\", React.createElement(_components.p, null, \"아직 블로그에 보완해야할 점이 많기에, 앞으로 블로그에서 구현/활용하고 싶은 기능은 다음과 같다.\"), \"\\n\", React.createElement(_components.p, null, \"게시글 카테고리화 기능(네이버 블로그의 카테고리 스타일을 지향한다), 댓글 기능(firebase를 활용하거나, 아예 CRUD 기능 구현해볼 겸 아예 다른 사이트를 삽입하는 등 응용해볼까 생각 중이다. 이건 좀 더 알아봐야겠다), 1대1 채팅기능, 앞 두개의 기능을 위한 SSO(Single Sign-On) 로그인 연동, 포트\\r\\n폴리오용 페이지, 기술블로그와 취미&일상블로그의 분리, 구글애널리틱스 연동 등을 생각하고 있다.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/ubuntu/github/ussr1285.github.io/blog/첫글20221231/index.mdx\";\nimport * as React from 'react';\nimport {graphql} from 'gatsby';\nimport {MDXProvider} from \"@mdx-js/react\";\nimport Layout from '../../components/layout';\nimport Seo from '../../components/seo';\nimport Video from '../../components/video';\nimport ExternalLink from '../../components/externalLink';\nconst shortcodes = {\n  Video,\n  ExternalLink\n};\nconst BlogPost = ({data, children}) => {\n  return React.createElement(Layout, {\n    pageTitle: data.mdx.frontmatter.title\n  }, React.createElement(MDXProvider, {\n    components: shortcodes\n  }, children));\n};\nexport const query = graphql`\nquery($id: String) {\n    mdx(id: {eq: $id}) {\n      frontmatter {\n        title\n        date(formatString: \"YYYY.MM.DD\")\n      }\n    }\n  }\n`;\nexport const Head = ({data}) => React.createElement(Seo, {\n  title: data.mdx.frontmatter.title\n});\nBlogPost\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPost, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","import React from \"react\"\nimport { \n    linkText\n} from './layout.module.css'\n\nconst ExternalLink = ({ URL, children }) => (\n    <a href={URL} className={linkText}>\n        {children}\n    </a>\n    \n)\nexport default ExternalLink","import * as React from 'react'\nimport { Link, useStaticQuery, graphql } from 'gatsby'\nimport {\n    container,\n    navLinks,\n    navLinkItem,\n    linkText,\n    siteHeader,\n    siteTitle,\n    pageHeading\n} from './layout.module.css'\n\nconst Layout = ({ pageTitle, children }) => {\n    const data = useStaticQuery(graphql`\n        query {\n            site {\n                siteMetadata {\n                    title\n                }\n            }\n        }\n    `)\n\n    return (\n        <div className={container}>\n            <header className={siteHeader}>\n                <Link to=\"/\" className={linkText}>\n                    <span className={siteTitle}>{data.site.siteMetadata.title}</span>\n                </Link>\n                <nav>\n                    <ul className={navLinks}>\n                        <li className={navLinkItem}>\n                            <Link to=\"/\" className={linkText}>\n                                Main\n                            </Link>\n                        </li>\n                        <li className={navLinkItem}>\n                            <Link to=\"/about\" className={linkText}>\n                                About\n                            </Link>\n                        </li>\n                        <li className={navLinkItem}>\n                            <a href=\"https://github.com/ussr1285\" className={linkText}>\n                                Github\n                            </a>\n                        </li>\n                    </ul>\n                </nav>\n            </header>\n            <main>\n                <h1 className={pageHeading}>{pageTitle}</h1>\n                {children}\n            </main>\n        </div>\n    )\n}\n\nexport default Layout","import * as React from 'react'\nimport { graphql, useStaticQuery } from 'gatsby'\n\nconst Seo = ({ title }) => {\n    const data = useStaticQuery(graphql`\n    query {\n        site {\n            siteMetadata {\n                title\n            }\n        }\n    }\n    `)\n    return(\n        <title>{title} | {data.site.siteMetadata.title}</title>\n    )\n}\n\nexport default Seo","import React from \"react\"\nimport { \n  videoWrapper\n} from './video.module.css'\n\nconst Video = ({ videoSrcURL, videoTitle, ...props }) => (\n  <div className={videoWrapper}>\n    <iframe\n      src={videoSrcURL}\n      title={videoTitle}\n      allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n      frameBorder=\"0\"\n      webkitallowfullscreen=\"true\"\n      mozallowfullscreen=\"true\"\n      allowFullScreen\n    />\n  </div>\n)\nexport default Video","// extracted by mini-css-extract-plugin\nexport var videoWrapper = \"video-module--video-wrapper--8f25c\";","// extracted by mini-css-extract-plugin\nexport var articleStyle = \"layout-module--articleStyle--05fbf\";\nexport var container = \"layout-module--container--78b04\";\nexport var linkText = \"layout-module--link-text--246e7\";\nexport var navLinkItem = \"layout-module--nav-link-item--a5f0a\";\nexport var navLinks = \"layout-module--nav-links--1113b\";\nexport var pageHeading = \"layout-module--page-heading--83cb2\";\nexport var siteHeader = \"layout-module--site-header--d0ab8\";\nexport var siteTitle = \"layout-module--site-title--e4dea\";","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode} [children]\n *   Children.\n *\n * @callback MergeComponents\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components|MergeComponents} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  let allComponents = useMDXComponents(components)\n\n  if (disableParentContext) {\n    allComponents = components || emptyObject\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","a","_provideComponents","components","React","href","wrapper","MDXLayout","shortcodes","Video","ExternalLink","BlogPost","_ref","data","children","Layout","pageTitle","mdx","frontmatter","title","MDXProvider","Head","_ref2","Seo","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","URL","className","linkText","useStaticQuery","container","siteHeader","to","siteTitle","site","siteMetadata","navLinks","navLinkItem","pageHeading","videoSrcURL","videoTitle","src","allow","frameBorder","webkitallowfullscreen","mozallowfullscreen","allowFullScreen","articleStyle","MDXContext","useMDXComponents","contextComponents","emptyObject","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}