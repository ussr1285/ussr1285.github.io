{"version":3,"file":"component---src-pages-blog-mdx-frontmatter-slug-js-content-file-path-home-ubuntu-github-ussr-1285-github-io-blog-말과글의힘-20230214-index-mdx-a63a49f143fc8f0509cd.js","mappings":"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","sources":["webpack://minjae-cho-blog/./blog/말과글의힘20230214/index.mdx","webpack://minjae-cho-blog/./src/pages/blog/{mdx.frontmatter__slug}.js","webpack://minjae-cho-blog/./src/components/comments.js","webpack://minjae-cho-blog/./src/components/externalLink.js","webpack://minjae-cho-blog/./src/components/layout.js","webpack://minjae-cho-blog/./src/components/seo.js","webpack://minjae-cho-blog/./src/components/video.js","webpack://minjae-cho-blog/./src/components/video.module.css","webpack://minjae-cho-blog/./src/components/layout.module.css","webpack://minjae-cho-blog/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"어렸을 땐 무엇을 \\\"~싫어, 이건 싫어, 그런 사람 싫어, 싫어싫어\\\"하며 말하고 다니는 경향이 많은 것 같다.\\r\\n허나 시간이 조금만 지나거나 나이가 들면, 사람은 성숙해지고 생각이 바뀐다.\\r\\n부정적인 발언을 남에게 들려줘 각인시킨다면, 그런 사람으로 인식되고 있을 확률이 클 것이다.\"), \"\\n\", React.createElement(_components.p, null, \"반대로 삶에 이로운 성취 의지나 도덕 관념 등을 다른 이들에게 들려준다면, 과거에 꺼낸 말로 인해 어떻게든 그 말을 지키려는 경향이 강해진다.\\r\\n(이것이 내가 블로그 글을 쓰기 시작한 이유 중 하나다.)\"), \"\\n\", React.createElement(_components.p, null, \"말과 글은 세상에 꺼낸 순간 돌이킬 수 없다.\\r\\n내가 뱉은 말은 돌이킬 수 없고, 내가 쓴 글은 사라지지 않고 어딘가에 남게된다.\\r\\n내 말을 듣게 된 사람들은, 나를 그 말에 근거하여 판단하게 될 것이다.\\r\\n그리고 그러한 말을 뱉은 나 자신 또한, 그 말에 묶여서 살게 될 것이다.\\r\\n허나 사람은 계속 변하는 존재다.\\r\\n삶에 좋은 쪽이던, 안 좋은 쪽이던 계속 어떤 방향으로 가며 변한다.\"), \"\\n\", React.createElement(_components.p, null, \"그렇기에 말에는 신중을 기해야 할 것이다.\\r\\n그리고 자신을 변화시킬 좋은 선언 도구로 사용해야 할 것이다.\"), \"\\n\", React.createElement(_components.p, null, \"그러므로 말과 글을 생각없이 남발하고 다니면 안된다.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/ubuntu/github/ussr1285.github.io/blog/말과글의힘20230214/index.mdx\";\nimport React from 'react';\nimport {graphql} from 'gatsby';\nimport {MDXProvider} from \"@mdx-js/react\";\nimport Layout from '../../components/layout';\nimport Seo from '../../components/seo';\nimport Video from '../../components/video';\nimport ExternalLink from '../../components/externalLink';\nimport Utteranc from '../../components/comments';\nconst shortcodes = {\n  Video,\n  ExternalLink\n};\nconst BlogPost = ({data, children}) => {\n  return React.createElement(Layout, {\n    pageTitle: data.mdx.frontmatter.title\n  }, React.createElement(MDXProvider, {\n    components: shortcodes\n  }, children, React.createElement(Utteranc)));\n};\nexport const query = graphql`\nquery($id: String) {\n    mdx(id: {eq: $id}) {\n      frontmatter {\n        title\n        date(formatString: \"YYYY.MM.DD\")\n      }\n    }\n  }\n`;\nexport const Head = ({data}) => React.createElement(Seo, {\n  title: data.mdx.frontmatter.title\n});\nBlogPost\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPost, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","import * as React from 'react'\n\nclass Utterances extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.commentsEl = React.createRef()\n    this.state = { status: 'pending' }\n  }\n\n  componentDidMount() {\n    const scriptEl = document.createElement('script')\n    scriptEl.onload = () => this.setState({ status: 'success' })\n    scriptEl.onerror = () => this.setState({ status: 'failed' })\n    scriptEl.async = true\n    scriptEl.src = 'https://utteranc.es/client.js'\n    scriptEl.setAttribute('repo', 'ussr1285/ussr1285.github.io')\n    scriptEl.setAttribute('issue-term', 'title')\n    scriptEl.setAttribute('theme', 'github-light')\n    scriptEl.setAttribute('crossorigin', 'anonymous')\n    this.commentsEl.current.appendChild(scriptEl)\n  }\n\n  render() {\n    const { status } = this.state\n\n    return (\n      <div className=\"comments-wrapper\">\n        {status === 'failed' && <div>Error. Please try again.</div>}\n        {status === 'pending' && <div>Loading script...</div>}\n        <div ref={this.commentsEl} />\n      </div>\n    )\n  }\n}\n\nexport default Utterances","import React from \"react\"\nimport { \n    linkText\n} from './layout.module.css'\n\nconst ExternalLink = ({ URL, children }) => (\n    <a href={URL} className={linkText}>\n        {children}\n    </a>\n    \n)\nexport default ExternalLink","import React from 'react'\nimport { Link, useStaticQuery, graphql } from 'gatsby'\nimport {\n    container,\n    navLinks,\n    navLinkItem,\n    linkText,\n    siteHeader,\n    siteTitle,\n    pageHeading\n} from './layout.module.css'\n\nconst Layout = ({ pageTitle, children }) => {\n    const data = useStaticQuery(graphql`\n        query {\n            site {\n                siteMetadata {\n                    title\n                }\n            }\n        }\n    `)\n\n    const makeNavs = () => {\n        const navLinkLists = [\n            [\"/\", \"Main\"],\n            [\"/about\", \"About\"],\n            [\"https://github.com/ussr1285\", \"Github\"],\n            [\"/guestbook\", \"Guestbook\"],\n            [\"/googlingTimeLine\", \"My Googling\"],\n        ]\n        let navs = []\n        navLinkLists.map((navInfo) => {\n            navs = [\n                ...navs,\n                <li className={navLinkItem}>\n                    <Link to={navInfo[0]} className={linkText}>\n                        {navInfo[1]}\n                    </Link>\n                </li>\n            ]\n        })\n        return navs\n    }\n\n    return (\n        <div className={container}>\n            <header className={siteHeader}>\n                <Link to=\"/\" className={linkText}>\n                    <span className={siteTitle}>{data.site.siteMetadata.title}</span>\n                </Link>\n                <nav>\n                    <ul className={navLinks}>\n                        {makeNavs()}\n                    </ul>\n                </nav>\n            </header>\n            <main>\n                <h1 className={pageHeading}>{pageTitle}</h1>\n                {children}\n            </main>\n        </div>\n    )\n}\n\nexport default Layout","import React from 'react'\nimport { graphql, useStaticQuery } from 'gatsby'\n\nconst Seo = ({ title }) => {\n    const data = useStaticQuery(graphql`\n    query {\n        site {\n            siteMetadata {\n                title\n            }\n        }\n    }\n    `)\n    return(\n        <title>{title} | {data.site.siteMetadata.title}</title>\n    )\n}\n\nexport default Seo","import React from \"react\"\nimport { \n  videoWrapper\n} from './video.module.css'\n\nconst Video = ({ videoSrcURL, videoTitle, ...props }) => (\n  <div className={videoWrapper}>\n    <iframe\n      src={videoSrcURL}\n      title={videoTitle}\n      allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n      frameBorder=\"0\"\n      webkitallowfullscreen=\"true\"\n      mozallowfullscreen=\"true\"\n      allowFullScreen\n    />\n  </div>\n)\nexport default Video","// extracted by mini-css-extract-plugin\nexport var videoWrapper = \"video-module--video-wrapper--8f25c\";","// extracted by mini-css-extract-plugin\nexport var articleStyle = \"layout-module--articleStyle--05fbf\";\nexport var container = \"layout-module--container--78b04\";\nexport var linkText = \"layout-module--link-text--246e7\";\nexport var navLinkItem = \"layout-module--nav-link-item--a5f0a\";\nexport var navLinks = \"layout-module--nav-links--1113b\";\nexport var pageHeading = \"layout-module--page-heading--83cb2\";\nexport var siteHeader = \"layout-module--site-header--d0ab8\";\nexport var siteTitle = \"layout-module--site-title--e4dea\";","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode} [children]\n *   Children.\n *\n * @callback MergeComponents\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components|MergeComponents} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  let allComponents = useMDXComponents(components)\n\n  if (disableParentContext) {\n    allComponents = components || emptyObject\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","_provideComponents","components","React","wrapper","MDXLayout","shortcodes","Video","ExternalLink","BlogPost","_ref","data","children","Layout","pageTitle","mdx","frontmatter","title","MDXProvider","Utteranc","Head","_ref2","Seo","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","Utterances","commentsEl","state","status","componentDidMount","scriptEl","document","createElement","onload","this","setState","onerror","async","src","setAttribute","current","appendChild","render","className","ref","URL","href","linkText","useStaticQuery","container","siteHeader","to","siteTitle","site","siteMetadata","navLinks","navs","map","navInfo","navLinkItem","makeNavs","pageHeading","videoSrcURL","videoTitle","allow","frameBorder","webkitallowfullscreen","mozallowfullscreen","allowFullScreen","articleStyle","MDXContext","useMDXComponents","contextComponents","emptyObject","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}