{"version":3,"file":"component---src-pages-blog-mdx-frontmatter-slug-js-content-file-path-home-ubuntu-github-ussr-1285-github-io-blog-간절한목표가필요하다-20230118-mdx-a955141e6bd86fc4c989.js","mappings":"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","sources":["webpack://minjae-cho-blog/./blog/간절한목표가필요하다20230118.mdx","webpack://minjae-cho-blog/./src/pages/blog/{mdx.frontmatter__slug}.js","webpack://minjae-cho-blog/./src/components/externalLink.js","webpack://minjae-cho-blog/./src/components/layout.js","webpack://minjae-cho-blog/./src/components/seo.js","webpack://minjae-cho-blog/./src/components/video.js","webpack://minjae-cho-blog/./src/components/video.module.css","webpack://minjae-cho-blog/./src/components/layout.module.css","webpack://minjae-cho-blog/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    blockquote: \"blockquote\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"이대로만 살아도 되겠는가?\"), \"\\n\", React.createElement(_components.p, null, \"매번 느끼지만, 주변인들은 전부 발전해나가고 있는 반면에 나는 그대로인 것 같다.\"), \"\\n\", React.createElement(_components.p, null, \"생각해보면 지금까지 이룬 것들도 모두 다른 사람들의 덕이다.\"), \"\\n\", React.createElement(_components.p, null, \"크게는 아버지의 조언과 전략.\"), \"\\n\", React.createElement(_components.p, null, \"작게는 어머니와 누나의 도움.\"), \"\\n\", React.createElement(_components.p, null, \"추가로 동아리, 고등학교 입시와 대학교 입시, 군 전문특기병 지원 때를 생각해보면 모두 도와준 사람들이 있었고, 그렇게 나름대로 준비한 나를 보고 가능성 있게 좋게 봐준 사람들이 있었다.\"), \"\\n\", React.createElement(_components.p, null, \"그때의 열정은 무엇이었을까?\"), \"\\n\", React.createElement(_components.p, null, \"그리고 어떻게 목표를 이뤘던 것인가?\"), \"\\n\", React.createElement(_components.p, null, \"초심자의 행운이었던 건가?\"), \"\\n\", React.createElement(_components.p, null, \"다시 한번 경험하고 싶다.\"), \"\\n\", React.createElement(_components.p, null, \"감정에 요동을 일으킬만한 목표가 필요하다.\"), \"\\n\", React.createElement(_components.p, null, \"추진력을 얻기 위해서는 목표가 필요하다.\"), \"\\n\", React.createElement(_components.p, null, \"그 단기적인 목표로 SW마에스트로를 생각하고 있다.\"), \"\\n\", React.createElement(_components.p, null, \"고등학교때부터 꿈꿔온 참가하고싶은 프로그램이었다.\"), \"\\n\", React.createElement(_components.p, null, \"2월 9일까지 지원서 제출이고, 2월 25일에 코테 시작인데 가능성이 있나..?!\"), \"\\n\", React.createElement(_components.p, null, \"아! 군 입대를 할 때, 책 이코테를 들고 백준 하루에 한 문제씩 풀어서 PS 도사가 되겠다고 했던 다짐은 이뤄지지 못했다! 물론 그것보다 삶에 가치있는 많은 것들을 얻고 나왔지만, 삶의 큰 목표중 하나를 이루기 위한 계획은 묻혀져버렸었다. 그때 실천하지 않았던 것이 지금 나의 발목을 잡는다.\"), \"\\n\", React.createElement(_components.p, null, \"갑자기 이 말이 떠오른다. 아마 모두가 아는 그 나폴레옹이 말했을 것이다.\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"\\\"우리가 어느 날엔가 마주칠 재난은 우리가 소홀히 보낸 어느 시간에 대한 보복이다.\\\"\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"내 개인적인 목표와, 주변인이 바라는 목표와, 이미 벌려놓은 다른 일들과, 그리고 잠재적인 나의 나태.\"), \"\\n\", React.createElement(_components.p, null, \"나이 들수록 이런 것들이 많아지는 것 같다..\"), \"\\n\", React.createElement(_components.p, null, \"허나 언제는 안그랬던 적이 있었던가?\"), \"\\n\", React.createElement(_components.p, null, \"항상 내가 바라는 목표에 방해되는 일들은 있어왔고, 완벽하게 준비를 마치기 전에 일은 닥쳐왔었다.\"), \"\\n\", React.createElement(_components.p, null, \"이 모든 것을 이겨내는 것은 바로 목표..!\"), \"\\n\", React.createElement(_components.p, null, \"간절한 목표가 있어 열심히 살았었기에 다른 사람들의 도움을 얻을 수 있었던 것이다.\"), \"\\n\", React.createElement(_components.p, null, \"나 자신이 열심히 한다면 주변인들도 그런 나를 도와준다.\"), \"\\n\", React.createElement(_components.p, null, \"나는 이번 SW 마에스트로 14기 연수생에 지원하겠다.\"), \"\\n\", React.createElement(_components.p, null, \"이것 저것 할 것도 있고, 군 복무도 끝났기에 좀 아무 생각없이 살고 싶지만, 앞으로 남은 시간 중에 지금이 가장 여유로울지도 모른다.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/ubuntu/github/ussr1285.github.io/blog/간절한목표가필요하다20230118.mdx\";\nimport * as React from 'react';\nimport {graphql} from 'gatsby';\nimport {MDXProvider} from \"@mdx-js/react\";\nimport Layout from '../../components/layout';\nimport Seo from '../../components/seo';\nimport Video from '../../components/video';\nimport ExternalLink from '../../components/externalLink';\nconst shortcodes = {\n  Video,\n  ExternalLink\n};\nconst BlogPost = ({data, children}) => {\n  return React.createElement(Layout, {\n    pageTitle: data.mdx.frontmatter.title\n  }, React.createElement(MDXProvider, {\n    components: shortcodes\n  }, children));\n};\nexport const query = graphql`\nquery($id: String) {\n    mdx(id: {eq: $id}) {\n      frontmatter {\n        title\n        date(formatString: \"YYYY.MM.DD\")\n      }\n    }\n  }\n`;\nexport const Head = ({data}) => React.createElement(Seo, {\n  title: data.mdx.frontmatter.title\n});\nBlogPost\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPost, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","import React from \"react\"\nimport { \n    linkText\n} from './layout.module.css'\n\nconst ExternalLink = ({ URL, children }) => (\n    <a href={URL} className={linkText}>\n        {children}\n    </a>\n    \n)\nexport default ExternalLink","import * as React from 'react'\nimport { Link, useStaticQuery, graphql } from 'gatsby'\nimport { \n    container,\n    navLinks,\n    navLinkItem,\n    linkText,\n    siteHeader,\n    siteTitle,\n    pageHeading\n} from './layout.module.css'\n\nconst Layout = ({pageTitle, children}) => {\n    const data = useStaticQuery(graphql`\n        query {\n            site {\n                siteMetadata {\n                    title\n                }\n            }\n        }\n    `)\n\n    return (\n        <div className={container}>\n            <header className={siteHeader}>\n                <Link to=\"/\" className={linkText}>\n                    <span className={siteTitle}>{data.site.siteMetadata.title}</span>\n                </Link>\n            <nav>\n                <ul className={navLinks}>\n                    <li className={navLinkItem}>\n                        <Link to=\"/about\" className={linkText}>\n                            About\n                        </Link>\n                    </li>\n                    <li className={navLinkItem}>\n                        <Link to=\"/blog\" className={linkText}>\n                            Blog\n                        </Link>\n                    </li>\n                    <li className={navLinkItem}>\n                        <a href=\"https://github.com/ussr1285\" className={linkText}>\n                            Github\n                        </a>\n                    </li>\n                </ul>\n            </nav>\n            </header>\n            <main>\n                <h1 className={pageHeading}>{pageTitle}</h1>\n                {children}\n            </main>\n        </div>\n    )\n}\n\nexport default Layout","import * as React from 'react'\nimport { graphql, useStaticQuery } from 'gatsby'\n\nconst Seo = ({ title }) => {\n    const data = useStaticQuery(graphql`\n    query {\n        site {\n            siteMetadata {\n                title\n            }\n        }\n    }\n    `)\n    return(\n        <title>{title} | {data.site.siteMetadata.title}</title>\n    )\n}\n\nexport default Seo","import React from \"react\"\nimport { \n  videoWrapper\n} from './video.module.css'\n\nconst Video = ({ videoSrcURL, videoTitle, ...props }) => (\n  <div className={videoWrapper}>\n    <iframe\n      src={videoSrcURL}\n      title={videoTitle}\n      allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n      frameBorder=\"0\"\n      webkitallowfullscreen=\"true\"\n      mozallowfullscreen=\"true\"\n      allowFullScreen\n    />\n  </div>\n)\nexport default Video","// extracted by mini-css-extract-plugin\nexport var videoWrapper = \"video-module--video-wrapper--8f25c\";","// extracted by mini-css-extract-plugin\nexport var container = \"layout-module--container--78b04\";\nexport var linkText = \"layout-module--link-text--246e7\";\nexport var navLinkItem = \"layout-module--nav-link-item--a5f0a\";\nexport var navLinks = \"layout-module--nav-links--1113b\";\nexport var pageHeading = \"layout-module--page-heading--83cb2\";\nexport var siteHeader = \"layout-module--site-header--d0ab8\";\nexport var siteTitle = \"layout-module--site-title--e4dea\";","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode} [children]\n *   Children.\n *\n * @callback MergeComponents\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components|MergeComponents} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  let allComponents = useMDXComponents(components)\n\n  if (disableParentContext) {\n    allComponents = components || emptyObject\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","blockquote","_provideComponents","components","React","wrapper","MDXLayout","shortcodes","Video","ExternalLink","BlogPost","_ref","data","children","Layout","pageTitle","mdx","frontmatter","title","MDXProvider","Head","_ref2","Seo","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","URL","href","className","linkText","useStaticQuery","container","siteHeader","to","siteTitle","site","siteMetadata","navLinks","navLinkItem","pageHeading","videoSrcURL","videoTitle","src","allow","frameBorder","webkitallowfullscreen","mozallowfullscreen","allowFullScreen","MDXContext","useMDXComponents","contextComponents","emptyObject","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}