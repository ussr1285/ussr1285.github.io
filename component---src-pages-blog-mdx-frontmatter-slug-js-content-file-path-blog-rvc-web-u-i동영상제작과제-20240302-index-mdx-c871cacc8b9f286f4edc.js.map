{"version":3,"file":"component---src-pages-blog-mdx-frontmatter-slug-js-content-file-path-blog-rvc-web-u-i동영상제작과제-20240302-index-mdx-c871cacc8b9f286f4edc.js","mappings":"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","sources":["webpack://minjae-cho-blog/./blog/RVCWebUI동영상제작과제20240302/index.mdx","webpack://minjae-cho-blog/./src/pages/blog/{mdx.frontmatter__slug}.js","webpack://minjae-cho-blog/./src/components/comments.js","webpack://minjae-cho-blog/./src/components/externalLink.js","webpack://minjae-cho-blog/./src/components/layout.js","webpack://minjae-cho-blog/./src/components/seo.js","webpack://minjae-cho-blog/./src/components/video.js","webpack://minjae-cho-blog/./src/components/video.module.css","webpack://minjae-cho-blog/./src/components/layout.module.css","webpack://minjae-cho-blog/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\"\n  }, _provideComponents(), props.components), {Video} = _components;\n  if (!Video) _missingMdxReference(\"Video\", true);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"학교의 과목 중 하나의 과제가 소프트웨어 툴에 대해서 소개하는 자유 주제 과제였다.\\r\\n그래서 관심있었던 프로그램이지만 사용법을 잘 몰랐던 것을 주제로, A+을 목표로 영상을 만들었다.\"), \"\\n\", React.createElement(_components.p, null, \"그 주제가 바로 음성을 다른 캐릭터 모델의 음성으로 바꿀 수 있는 \", React.createElement(_components.a, {\n    href: \"https://github.com/RVC-Project/Retrieval-based-Voice-Conversion-WebUI\"\n  }, \"RVC-WebUI\"), \"다.\\r\\n본래 \", React.createElement(_components.a, {\n    href: \"https://github.com/w-okada/voice-changer\"\n  }, \"이것\"), \"으로 하려고 했으나 이것은 실시간 음성 변환만 들어있기에 분량이 부족했기에, RVC-WebUI로 하게 된 것이다.\"), \"\\n\", React.createElement(_components.p, null, \"RVC-WebUI는 실시간 음성 변환도 있고, 오디오 파일 음성 변환도 있고, 반주와 보컬 음성 분리도 가능하며, 모델을 학습시키는 것도 가능하다. 그리고 애초에 \", React.createElement(_components.a, {\n    href: \"https://github.com/w-okada/voice-changer\"\n  }, \"w-okada의 voice-changer\"), \"가 RVC-WebUI를 기반으로 하는지, RVC-WebUI로 향하는 링크가 README.md에 있었기에 이것으로 하게 되었다.\"), \"\\n\", React.createElement(_components.p, null, \"1편\"), \"\\n\", React.createElement(Video, {\n    videoSrcURL: \"https://www.youtube.com/embed/9z2Q9Zep07Y?si=Glur13kbw5HK9UXt\",\n    videoTitle: \"[SWTT] RVC-WebUI를 활용해서 목소리 변조, 반주와 보컬 분리, 실시간 목소리 변조, RVC 모델 생성해보기 (1/2)\"\n  }), \"\\n\", React.createElement(_components.p, null, \"2편\"), \"\\n\", React.createElement(Video, {\n    videoSrcURL: \"https://www.youtube.com/embed/KeuU9kQGoH8?si=J0gurWGG-mLhX2xI\",\n    videoTitle: \"[SWTT] RVC-WebUI를 활용해서 목소리 변조, 반주와 보컬 분리, 실시간 목소리 변조, RVC 모델 생성해보기 (2/2)\"\n  }), \"\\n\", React.createElement(_components.p, null, \"이 과정에서 저작권 만료된 음악과 저작권 없는 음성 모델을 찾느라 시간을 많이 썼다.\\r\\n오히려 프로그램 소개와 영상 편집은 쉬웠던 것 같다.\"), \"\\n\", React.createElement(_components.p, null, \"그렇게 A+과 간단한 영상 편집 능력을 얻었다고 한다..\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","import GATSBY_COMPILED_MDX from \"/home/ubuntu/github/ussr1285.github.io/blog/RVCWebUI동영상제작과제20240302/index.mdx\";\nimport React from 'react';\nimport {graphql} from 'gatsby';\nimport {MDXProvider} from \"@mdx-js/react\";\nimport Layout from '../../components/layout';\nimport Seo from '../../components/seo';\nimport Video from '../../components/video';\nimport ExternalLink from '../../components/externalLink';\nimport Utteranc from '../../components/comments';\nconst shortcodes = {\n  Video,\n  ExternalLink\n};\nconst BlogPost = ({data, children}) => {\n  return React.createElement(Layout, {\n    pageTitle: data.mdx.frontmatter.title\n  }, React.createElement(MDXProvider, {\n    components: shortcodes\n  }, children, React.createElement(Utteranc)));\n};\nexport const query = graphql`\nquery($id: String) {\n    mdx(id: {eq: $id}) {\n      frontmatter {\n        title\n        date(formatString: \"YYYY.MM.DD\")\n      }\n    }\n  }\n`;\nexport const Head = ({data}) => React.createElement(Seo, {\n  title: data.mdx.frontmatter.title\n});\nBlogPost\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPost, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","import * as React from 'react'\n\nclass Utterances extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.commentsEl = React.createRef()\n    this.state = { status: 'pending' }\n  }\n\n  componentDidMount() {\n    const scriptEl = document.createElement('script')\n    scriptEl.onload = () => this.setState({ status: 'success' })\n    scriptEl.onerror = () => this.setState({ status: 'failed' })\n    scriptEl.async = true\n    scriptEl.src = 'https://utteranc.es/client.js'\n    scriptEl.setAttribute('repo', 'ussr1285/ussr1285.github.io')\n    scriptEl.setAttribute('issue-term', 'title')\n    scriptEl.setAttribute('theme', 'github-light')\n    scriptEl.setAttribute('crossorigin', 'anonymous')\n    this.commentsEl.current.appendChild(scriptEl)\n  }\n\n  render() {\n    const { status } = this.state\n\n    return (\n      <div className=\"comments-wrapper\">\n        {status === 'failed' && <div>Error. Please try again.</div>}\n        {status === 'pending' && <div>Loading script...</div>}\n        <div ref={this.commentsEl} />\n      </div>\n    )\n  }\n}\n\nexport default Utterances","import React from \"react\"\nimport { \n    linkText\n} from './layout.module.css'\n\nconst ExternalLink = ({ URL, children }) => (\n    <a href={URL} className={linkText}>\n        {children}\n    </a>\n    \n)\nexport default ExternalLink","import React from 'react'\nimport { Link, useStaticQuery, graphql } from 'gatsby'\nimport {\n    container,\n    navLinks,\n    navLinkItem,\n    linkText,\n    siteHeader,\n    siteTitle,\n    pageHeading\n} from './layout.module.css'\n\nconst Layout = ({ pageTitle, children }) => {\n    const data = useStaticQuery(graphql`\n        query {\n            site {\n                siteMetadata {\n                    title\n                }\n            }\n        }\n    `)\n\n    const makeNavs = () => {\n        const navLinkLists = [\n            [\"/\", \"Main\"],\n            [\"/about\", \"About\"],\n            [\"https://github.com/ussr1285\", \"Github\"],\n            [\"/guestbook\", \"Guestbook\"],\n            [\"https://minjaegoogling.notion.site/fb5067a26b514e6580519523e319a5f6?pvs=4\", \"My Googling\"],\n        ]\n        let navs = []\n        navLinkLists.map((navInfo) => {\n            navs = [\n                ...navs,\n                <li className={navLinkItem}>\n                    <Link to={navInfo[0]} className={linkText}>\n                        {navInfo[1]}\n                    </Link>\n                </li>\n            ]\n        })\n        return navs\n    }\n\n    return (\n        <div className={container}>\n            <header className={siteHeader}>\n                <Link to=\"/\" className={linkText}>\n                    <span className={siteTitle}>{data.site.siteMetadata.title}</span>\n                </Link>\n                <nav>\n                    <ul className={navLinks}>\n                        {makeNavs()}\n                    </ul>\n                </nav>\n            </header>\n            <main>\n                <h1 className={pageHeading}>{pageTitle}</h1>\n                {children}\n            </main>\n        </div>\n    )\n}\n\nexport default Layout","import React from 'react'\nimport { graphql, useStaticQuery } from 'gatsby'\n\nconst Seo = ({ title }) => {\n    const data = useStaticQuery(graphql`\n    query {\n        site {\n            siteMetadata {\n                title\n            }\n        }\n    }\n    `)\n    return(\n        <title>{title} | {data.site.siteMetadata.title}</title>\n    )\n}\n\nexport default Seo","import React from \"react\"\nimport { \n  videoWrapper\n} from './video.module.css'\n\nconst Video = ({ videoSrcURL, videoTitle, ...props }) => (\n  <div className={videoWrapper}>\n    <iframe\n      src={videoSrcURL}\n      title={videoTitle}\n      allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n      frameBorder=\"0\"\n      webkitallowfullscreen=\"true\"\n      mozallowfullscreen=\"true\"\n      allowFullScreen\n    />\n  </div>\n)\nexport default Video","// extracted by mini-css-extract-plugin\nexport var videoWrapper = \"video-module--video-wrapper--8f25c\";","// extracted by mini-css-extract-plugin\nexport var articleStyle = \"layout-module--articleStyle--05fbf\";\nexport var container = \"layout-module--container--78b04\";\nexport var linkText = \"layout-module--link-text--246e7\";\nexport var navLinkItem = \"layout-module--nav-link-item--a5f0a\";\nexport var navLinks = \"layout-module--nav-links--1113b\";\nexport var pageHeading = \"layout-module--page-heading--83cb2\";\nexport var siteHeader = \"layout-module--site-header--d0ab8\";\nexport var siteTitle = \"layout-module--site-title--e4dea\";","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode} [children]\n *   Children.\n *\n * @callback MergeComponents\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components|MergeComponents} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  let allComponents = useMDXComponents(components)\n\n  if (disableParentContext) {\n    allComponents = components || emptyObject\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","a","_provideComponents","components","Video","id","component","Error","_missingMdxReference","React","href","videoSrcURL","videoTitle","wrapper","MDXLayout","shortcodes","ExternalLink","BlogPost","_ref","data","children","Layout","pageTitle","mdx","frontmatter","title","MDXProvider","Utteranc","Head","_ref2","Seo","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","Utterances","_React$Component","_this","call","commentsEl","state","status","_inheritsLoose","_proto","prototype","componentDidMount","scriptEl","document","createElement","onload","this","setState","onerror","async","src","setAttribute","current","appendChild","render","className","ref","URL","linkText","useStaticQuery","container","siteHeader","Link","to","siteTitle","site","siteMetadata","navLinks","makeNavs","navs","map","navInfo","concat","_toConsumableArray","navLinkItem","pageHeading","allow","frameBorder","webkitallowfullscreen","mozallowfullscreen","allowFullScreen","articleStyle","MDXContext","useMDXComponents","contextComponents","emptyObject","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}