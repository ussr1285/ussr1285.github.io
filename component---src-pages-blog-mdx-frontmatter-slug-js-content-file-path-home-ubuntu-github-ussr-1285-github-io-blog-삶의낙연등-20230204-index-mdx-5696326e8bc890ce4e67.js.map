{"version":3,"file":"component---src-pages-blog-mdx-frontmatter-slug-js-content-file-path-home-ubuntu-github-ussr-1285-github-io-blog-삶의낙연등-20230204-index-mdx-5696326e8bc890ce4e67.js","mappings":"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","sources":["webpack://minjae-cho-blog/./blog/삶의낙연등20230204/index.mdx","webpack://minjae-cho-blog/./src/pages/blog/{mdx.frontmatter__slug}.js","webpack://minjae-cho-blog/./src/components/externalLink.js","webpack://minjae-cho-blog/./src/components/layout.js","webpack://minjae-cho-blog/./src/components/seo.js","webpack://minjae-cho-blog/./src/components/video.js","webpack://minjae-cho-blog/./src/components/video.module.css","webpack://minjae-cho-blog/./src/components/layout.module.css","webpack://minjae-cho-blog/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"군대에서 훈련이나 근무로 인해 제한되는 시간을 제외하고는, 매일 밤마다 연등을 하러  갔었다.\"), \"\\n\", React.createElement(_components.p, null, \"자대 배치를 받은 당시 생활관의 TV 셋탑박스는 우리집에 있는 것보다 좋은 기가 지니 AI 스피커였었다..!\"), \"\\n\", React.createElement(_components.p, null, \"그래서 밤마다 우리 부대원들은 리모컨 마이크로 원하는 음악을 틀어 들으며 잤는데, 나는 음악 틀고서는 못 자는 성격이라 매일 연등을 가서, 생활관에 가서도 음악 소리가 상관없을 정도로 피곤하게 만든 뒤에 돌아와서 기절 취침했다. (지금은 노래 못 듣는 셋탑박스로 전량 교체되었다.)\"), \"\\n\", React.createElement(_components.p, null, \"이때마다 도서관에서 책을 읽거나 공부를 하거나, 사지방에서 무언가를 만들거나 그림강의를 보는 등 하고 싶은 것을 했었는데 이것이 군생활의 낙이 되어버렸었다.\"), \"\\n\", React.createElement(_components.p, null, \"아무리 하루가 힘들었어도 이때 딱 하고싶은 걸 하면서 하루를 편하게 마무리하는 느낌?\"), \"\\n\", React.createElement(_components.p, null, \"이 생활패턴이 너무 익숙해져서 가끔 연등을 안가면 1시까지 잠을 못자서 다음날 더 피곤하기도 했었다.\"), \"\\n\", React.createElement(_components.p, null, \"요즘 말년 휴가를 나와서 하는 것이 그렇게는 많지도 않은데 무언가에 쫓겨살고 있었고, 시간을 허투루 쓴다는 생각이 들었다.\"), \"\\n\", React.createElement(_components.p, null, \"무언가 잘못되어가고 있다는 생각이 들 때는 책을 읽어야 한다는 군에서 떠올린 삶의 지혜가 생각났다.\"), \"\\n\", React.createElement(_components.p, null, \"그러다가 더 생각해보니, 내가 군에서 세운 계획과 다르게 책을 안 읽고 있었고 취미생활도 안하고 있었던 것이다.\"), \"\\n\", React.createElement(_components.p, null, \"그래서 최근 군에서의 연등 시간을 참고하여, 22시부터 정말 내가 하고 싶었던 것을 다시 해보았더니, 삶의 만족도가 높아졌다. 그리고 다시 생각이란 것을 하게 된 것 같다!\"), \"\\n\", React.createElement(_components.p, null, \"그리고 이때 집중이 상당히 잘되기도 한다.\"), \"\\n\", React.createElement(_components.p, null, \"평소 시간에는 정말 해야하는 것을 하다가, 22시부터는 하고 싶은 것을 하는 것.\"), \"\\n\", React.createElement(_components.p, null, \"나쁘지 않은 것 같다.\"), \"\\n\", React.createElement(_components.p, null, \"만약 평소의 삶이 지쳐 진정 하고싶은 것을 하지 못하고, 막상 밤 쯤에 시간이 주어져도 1시간 정도로 짧아 의미없이 시간을 보내게 된다면, 연등을 해보는 것이 어떠한가?\"), \"\\n\", React.createElement(_components.p, null, \"그리고 불면증에도 상당히 도움이 될 것이다.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/ubuntu/github/ussr1285.github.io/blog/삶의낙연등20230204/index.mdx\";\nimport * as React from 'react';\nimport {graphql} from 'gatsby';\nimport {MDXProvider} from \"@mdx-js/react\";\nimport Layout from '../../components/layout';\nimport Seo from '../../components/seo';\nimport Video from '../../components/video';\nimport ExternalLink from '../../components/externalLink';\nconst shortcodes = {\n  Video,\n  ExternalLink\n};\nconst BlogPost = ({data, children}) => {\n  return React.createElement(Layout, {\n    pageTitle: data.mdx.frontmatter.title\n  }, React.createElement(MDXProvider, {\n    components: shortcodes\n  }, children));\n};\nexport const query = graphql`\nquery($id: String) {\n    mdx(id: {eq: $id}) {\n      frontmatter {\n        title\n        date(formatString: \"YYYY.MM.DD\")\n      }\n    }\n  }\n`;\nexport const Head = ({data}) => React.createElement(Seo, {\n  title: data.mdx.frontmatter.title\n});\nBlogPost\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPost, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","import React from \"react\"\nimport { \n    linkText\n} from './layout.module.css'\n\nconst ExternalLink = ({ URL, children }) => (\n    <a href={URL} className={linkText}>\n        {children}\n    </a>\n    \n)\nexport default ExternalLink","import * as React from 'react'\nimport { Link, useStaticQuery, graphql } from 'gatsby'\nimport {\n    container,\n    navLinks,\n    navLinkItem,\n    linkText,\n    siteHeader,\n    siteTitle,\n    pageHeading\n} from './layout.module.css'\n\nconst Layout = ({ pageTitle, children }) => {\n    const data = useStaticQuery(graphql`\n        query {\n            site {\n                siteMetadata {\n                    title\n                }\n            }\n        }\n    `)\n\n    return (\n        <div className={container}>\n            <header className={siteHeader}>\n                <Link to=\"/\" className={linkText}>\n                    <span className={siteTitle}>{data.site.siteMetadata.title}</span>\n                </Link>\n                <nav>\n                    <ul className={navLinks}>\n                        <li className={navLinkItem}>\n                            <Link to=\"/\" className={linkText}>\n                                Main\n                            </Link>\n                        </li>\n                        <li className={navLinkItem}>\n                            <Link to=\"/about\" className={linkText}>\n                                About\n                            </Link>\n                        </li>\n                        <li className={navLinkItem}>\n                            <a href=\"https://github.com/ussr1285\" className={linkText}>\n                                Github\n                            </a>\n                        </li>\n                    </ul>\n                </nav>\n            </header>\n            <main>\n                <h1 className={pageHeading}>{pageTitle}</h1>\n                {children}\n            </main>\n        </div>\n    )\n}\n\nexport default Layout","import * as React from 'react'\nimport { graphql, useStaticQuery } from 'gatsby'\n\nconst Seo = ({ title }) => {\n    const data = useStaticQuery(graphql`\n    query {\n        site {\n            siteMetadata {\n                title\n            }\n        }\n    }\n    `)\n    return(\n        <title>{title} | {data.site.siteMetadata.title}</title>\n    )\n}\n\nexport default Seo","import React from \"react\"\nimport { \n  videoWrapper\n} from './video.module.css'\n\nconst Video = ({ videoSrcURL, videoTitle, ...props }) => (\n  <div className={videoWrapper}>\n    <iframe\n      src={videoSrcURL}\n      title={videoTitle}\n      allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n      frameBorder=\"0\"\n      webkitallowfullscreen=\"true\"\n      mozallowfullscreen=\"true\"\n      allowFullScreen\n    />\n  </div>\n)\nexport default Video","// extracted by mini-css-extract-plugin\nexport var videoWrapper = \"video-module--video-wrapper--8f25c\";","// extracted by mini-css-extract-plugin\nexport var articleStyle = \"layout-module--articleStyle--05fbf\";\nexport var container = \"layout-module--container--78b04\";\nexport var linkText = \"layout-module--link-text--246e7\";\nexport var navLinkItem = \"layout-module--nav-link-item--a5f0a\";\nexport var navLinks = \"layout-module--nav-links--1113b\";\nexport var pageHeading = \"layout-module--page-heading--83cb2\";\nexport var siteHeader = \"layout-module--site-header--d0ab8\";\nexport var siteTitle = \"layout-module--site-title--e4dea\";","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode} [children]\n *   Children.\n *\n * @callback MergeComponents\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components|MergeComponents} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  let allComponents = useMDXComponents(components)\n\n  if (disableParentContext) {\n    allComponents = components || emptyObject\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","_provideComponents","components","React","wrapper","MDXLayout","shortcodes","Video","ExternalLink","BlogPost","_ref","data","children","Layout","pageTitle","mdx","frontmatter","title","MDXProvider","Head","_ref2","Seo","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","URL","href","className","linkText","useStaticQuery","container","siteHeader","to","siteTitle","site","siteMetadata","navLinks","navLinkItem","pageHeading","videoSrcURL","videoTitle","src","allow","frameBorder","webkitallowfullscreen","mozallowfullscreen","allowFullScreen","articleStyle","MDXContext","useMDXComponents","contextComponents","emptyObject","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}