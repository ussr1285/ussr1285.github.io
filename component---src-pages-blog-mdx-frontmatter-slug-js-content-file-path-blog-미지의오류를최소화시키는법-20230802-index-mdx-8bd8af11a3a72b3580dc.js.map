{"version":3,"file":"component---src-pages-blog-mdx-frontmatter-slug-js-content-file-path-blog-미지의오류를최소화시키는법-20230802-index-mdx-8bd8af11a3a72b3580dc.js","mappings":"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","sources":["webpack://minjae-cho-blog/./blog/미지의오류를최소화시키는법20230802/index.mdx","webpack://minjae-cho-blog/./src/pages/blog/{mdx.frontmatter__slug}.js","webpack://minjae-cho-blog/./src/components/comments.js","webpack://minjae-cho-blog/./src/components/externalLink.js","webpack://minjae-cho-blog/./src/components/layout.js","webpack://minjae-cho-blog/./src/components/seo.js","webpack://minjae-cho-blog/./src/components/video.js","webpack://minjae-cho-blog/./src/components/video.module.css","webpack://minjae-cho-blog/./src/components/layout.module.css","webpack://minjae-cho-blog/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"뭔가 소프트웨어를 만들다보면 \\\"경유\\\"해야 하는 것들이 생긴다.\\r\\n예를 들면 프론트에서 서버 사이드 웹서버로 정보를 요청하지만, 사실은 DB의 데이터를 얻어오는 것 같은 것이 될 수 있다.\"), \"\\n\", React.createElement(_components.p, null, \"최근 만든 잘 작동하던 모바일 앱이 갑자기 아무런 수정없이도, 푸시가 안되는 문제가 발생했었다.\"), \"\\n\", React.createElement(_components.p, null, \"아예 OneSignal에서 내 휴대폰에서 작동하는 앱들을 감지하지 못하는 문제가 발생했었기에, 문제점을 여러 곳에서 찾아보기 시작했다.\"), \"\\n\", React.createElement(_components.p, null, \"일단 그 모바일 앱은 마침 크로스 플랫폼 프레임워크 + 네이티브 코드로 만들어져 있었기에, js와 java와 object-c를 다 살펴보았다.\"), \"\\n\", React.createElement(_components.p, null, \"근데 또 그 모바일 앱을 수정하는 파이썬 자체 프로그램을 쓰고 있었기에, 그 코드 또한 살펴보아야 했다.\"), \"\\n\", React.createElement(_components.p, null, \"또 그것이 그냥 firebase 같은 곳에서 푸시 알림을 처리하는 것이 아니라, OneSignal 이라는 서비스를 경유하여 푸시를 처리하는 것이었다.\\r\\n그래서 그것 또한 OneSignal에서 발생한 문제인지 firebase에서 발생한 문제인지 알아보아야 했다. (+ iOS도 작동이 안되었기에 firebase의 문제는 아니었을 것이다.)\"), \"\\n\", React.createElement(_components.p, null, \"근데 또 같은 환경으로 만든 앱은 잘 작동하는 것이 아닌가?\"), \"\\n\", React.createElement(_components.p, null, \"근데 한 6시간 동안 이유를 찾아보다가, 갑자기 그냥 푸시가 작동하고, OneSignal에서 내가 조작한 앱의 기록들이 나왔다.\"), \"\\n\", React.createElement(_components.p, null, \"푸시도 안되고, 앱 알림 구독 유무도 절대 안나오다가 6시간 후에서야 한방에 나왔다.\"), \"\\n\", React.createElement(_components.p, null, \"여기저기 다 들쑤시고 다녔지만, 결국 OneSignal 혼자 만의 문제였던 것이다.\"), \"\\n\", React.createElement(_components.p, null, \"이것 저것을 섞어서 쓰면 오히려 어디서 문제가 발생한지 파악하기가 힘들어지므로, 최대한 간단한 구조로 만들어 디버깅을 쉽게하는 것이 좋은 방법인 것 같다.\"), \"\\n\", React.createElement(_components.p, null, \"(+남이 만들어놓은 인프라나 라이브러리 등에 대해서는 직접적인 디버깅이 힘드므로, 최대한 신뢰도 높은 것을 사용해야 할 듯 하다.)\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"C:/Users/alawho/Documents/GitHub/ussr1285.github.io/blog/미지의오류를최소화시키는법20230802/index.mdx\";\nimport React from 'react';\nimport {graphql} from 'gatsby';\nimport {MDXProvider} from \"@mdx-js/react\";\nimport Layout from '../../components/layout';\nimport Seo from '../../components/seo';\nimport Video from '../../components/video';\nimport ExternalLink from '../../components/externalLink';\nimport Utteranc from '../../components/comments';\nconst shortcodes = {\n  Video,\n  ExternalLink\n};\nconst BlogPost = ({data, children}) => {\n  return React.createElement(Layout, {\n    pageTitle: data.mdx.frontmatter.title\n  }, React.createElement(MDXProvider, {\n    components: shortcodes\n  }, children, React.createElement(Utteranc)));\n};\nexport const query = graphql`\nquery($id: String) {\n    mdx(id: {eq: $id}) {\n      frontmatter {\n        title\n        date(formatString: \"YYYY.MM.DD\")\n      }\n    }\n  }\n`;\nexport const Head = ({data}) => React.createElement(Seo, {\n  title: data.mdx.frontmatter.title\n});\nBlogPost\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPost, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","import * as React from 'react'\r\n\r\nclass Utterances extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.commentsEl = React.createRef()\r\n    this.state = { status: 'pending' }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const scriptEl = document.createElement('script')\r\n    scriptEl.onload = () => this.setState({ status: 'success' })\r\n    scriptEl.onerror = () => this.setState({ status: 'failed' })\r\n    scriptEl.async = true\r\n    scriptEl.src = 'https://utteranc.es/client.js'\r\n    scriptEl.setAttribute('repo', 'ussr1285/ussr1285.github.io')\r\n    scriptEl.setAttribute('issue-term', 'title')\r\n    scriptEl.setAttribute('theme', 'github-light')\r\n    scriptEl.setAttribute('crossorigin', 'anonymous')\r\n    this.commentsEl.current.appendChild(scriptEl)\r\n  }\r\n\r\n  render() {\r\n    const { status } = this.state\r\n\r\n    return (\r\n      <div className=\"comments-wrapper\">\r\n        {status === 'failed' && <div>Error. Please try again.</div>}\r\n        {status === 'pending' && <div>Loading script...</div>}\r\n        <div ref={this.commentsEl} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Utterances","import React from \"react\"\r\nimport { \r\n    linkText\r\n} from './layout.module.css'\r\n\r\nconst ExternalLink = ({ URL, children }) => (\r\n    <a href={URL} className={linkText}>\r\n        {children}\r\n    </a>\r\n    \r\n)\r\nexport default ExternalLink","import React from 'react'\r\nimport { Link, useStaticQuery, graphql } from 'gatsby'\r\nimport {\r\n    container,\r\n    navLinks,\r\n    navLinkItem,\r\n    linkText,\r\n    siteHeader,\r\n    siteTitle,\r\n    pageHeading\r\n} from './layout.module.css'\r\n\r\nconst Layout = ({ pageTitle, children }) => {\r\n    const data = useStaticQuery(graphql`\r\n        query {\r\n            site {\r\n                siteMetadata {\r\n                    title\r\n                }\r\n            }\r\n        }\r\n    `)\r\n\r\n    const makeNavs = () => {\r\n        const navLinkLists = [\r\n            [\"/\", \"Main\"],\r\n            [\"/about\", \"About\"],\r\n            [\"https://github.com/ussr1285\", \"Github\"],\r\n            [\"/guestbook\", \"Guestbook\"],\r\n            [\"https://minjaegoogling.notion.site/fb5067a26b514e6580519523e319a5f6?pvs=4\", \"My Googling\"],\r\n        ]\r\n        let navs = []\r\n        navLinkLists.map((navInfo) => {\r\n            navs = [\r\n                ...navs,\r\n                <li className={navLinkItem}>\r\n                    <Link to={navInfo[0]} className={linkText}>\r\n                        {navInfo[1]}\r\n                    </Link>\r\n                </li>\r\n            ]\r\n        })\r\n        return navs\r\n    }\r\n\r\n    return (\r\n        <div className={container}>\r\n            <header className={siteHeader}>\r\n                <Link to=\"/\" className={linkText}>\r\n                    <span className={siteTitle}>{data.site.siteMetadata.title}</span>\r\n                </Link>\r\n                <nav>\r\n                    <ul className={navLinks}>\r\n                        {makeNavs()}\r\n                    </ul>\r\n                </nav>\r\n            </header>\r\n            <main>\r\n                <h1 className={pageHeading}>{pageTitle}</h1>\r\n                {children}\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Layout","import React from 'react'\r\nimport { graphql, useStaticQuery } from 'gatsby'\r\n\r\nconst Seo = ({ title }) => {\r\n    const data = useStaticQuery(graphql`\r\n    query {\r\n        site {\r\n            siteMetadata {\r\n                title\r\n            }\r\n        }\r\n    }\r\n    `)\r\n    return(\r\n        <title>{title} | {data.site.siteMetadata.title}</title>\r\n    )\r\n}\r\n\r\nexport default Seo","import React from \"react\"\r\nimport { \r\n  videoWrapper\r\n} from './video.module.css'\r\n\r\nconst Video = ({ videoSrcURL, videoTitle, ...props }) => (\r\n  <div className={videoWrapper}>\r\n    <iframe\r\n      src={videoSrcURL}\r\n      title={videoTitle}\r\n      allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\r\n      frameBorder=\"0\"\r\n      webkitallowfullscreen=\"true\"\r\n      mozallowfullscreen=\"true\"\r\n      allowFullScreen\r\n    />\r\n  </div>\r\n)\r\nexport default Video","// extracted by mini-css-extract-plugin\nexport var videoWrapper = \"video-module--video-wrapper--8f25c\";","// extracted by mini-css-extract-plugin\nexport var articleStyle = \"layout-module--articleStyle--05fbf\";\nexport var container = \"layout-module--container--78b04\";\nexport var linkText = \"layout-module--link-text--246e7\";\nexport var navLinkItem = \"layout-module--nav-link-item--a5f0a\";\nexport var navLinks = \"layout-module--nav-links--1113b\";\nexport var pageHeading = \"layout-module--page-heading--83cb2\";\nexport var siteHeader = \"layout-module--site-header--d0ab8\";\nexport var siteTitle = \"layout-module--site-title--e4dea\";","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","_provideComponents","components","React","wrapper","MDXLayout","shortcodes","Video","ExternalLink","BlogPost","_ref","data","children","Layout","pageTitle","mdx","frontmatter","title","MDXProvider","Utteranc","Head","_ref2","Seo","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","Utterances","_React$Component","_this","call","commentsEl","state","status","_inheritsLoose","_proto","prototype","componentDidMount","scriptEl","document","createElement","onload","this","setState","onerror","async","src","setAttribute","current","appendChild","render","className","ref","URL","href","linkText","useStaticQuery","container","siteHeader","Link","to","siteTitle","site","siteMetadata","navLinks","makeNavs","navs","map","navInfo","concat","_toConsumableArray","navLinkItem","pageHeading","videoSrcURL","videoTitle","allow","frameBorder","webkitallowfullscreen","mozallowfullscreen","allowFullScreen","articleStyle","MDXContext","useMDXComponents","contextComponents","emptyObject","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}